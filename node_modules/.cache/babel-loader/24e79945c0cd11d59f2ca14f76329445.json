{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\ability\\dept\\Hour.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\ability\\dept\\Hour.vue","mtime":1596537159523},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getHourRadixUserBySum, getHourRadixUserYesterday } from \"../../../api/checkwork/hour.js\";\nimport { getHourRadixDept as _getHourRadixDept, getHourRadixDeptCentre as _getHourRadixDeptCentre, getHourRadixDeptCentreuser } from \"../../../api/checkwork/hour.js\";\nimport { dateFormat } from \"../../../utils/date.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      // 部门\n      query1: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date()),\n        deptId: null\n      },\n      // 个人\n      query2: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date())\n      },\n      // 公司\n      query3: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date()),\n        userId: null,\n        type: '1'\n      },\n      // 中心\n      query4: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date()),\n        userId: null,\n        parentId: null\n      },\n      DeptList: [],\n      options2: [{\n        value: '1',\n        label: '中心'\n      }, {\n        value: '2',\n        label: '部门'\n      }],\n      CentreList: [],\n      isShow: false,\n      isShow2: false,\n      isShow3: false,\n      isShow4: false,\n      optionBar: {\n        title: {\n          text: '' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: ''\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar2: {\n        title: {\n          text: '公司个人工时排行' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: ''\n            }, {\n              name: '劳模线',\n              itemStyle: {\n                normal: {\n                  color: 'blue'\n                }\n              },\n              label: {\n                formatter: '劳模线'\n              },\n              yAxis: ''\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar3: {\n        title: {\n          text: '' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar4: {\n        title: {\n          text: '' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: 9\n            }, {\n              name: '劳模线',\n              itemStyle: {\n                normal: {\n                  color: 'blue'\n                }\n              },\n              label: {\n                formatter: '劳模线'\n              },\n              yAxis: 11\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar5: {\n        title: {\n          text: '' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: ''\n            }, {\n              name: '劳模线',\n              itemStyle: {\n                normal: {\n                  color: 'blue'\n                }\n              },\n              label: {\n                formatter: '劳模线'\n              },\n              yAxis: ''\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['permissions', 'deptId', 'userId'])),\n  created: function created() {\n    this.getHourRadixDept();\n    this.getHourRadixDeptCentre();\n    this.query1.deptId = this.deptId;\n    this.query4.userId = this.userId;\n    this.query3.userId = this.userId;\n    this.getHourRadix();\n  },\n  mounted: function mounted() {},\n  methods: {\n    // 获取所有部门\n    getHourRadixDept: function getHourRadixDept() {\n      var _this = this;\n\n      _getHourRadixDept().then(function (res) {\n        res.data.data.forEach(function (item) {\n          _this.DeptList.push({\n            value: item.deptId,\n            label: item.deptName\n          });\n        });\n      });\n    },\n    // 获取所有中心\n    getHourRadixDeptCentre: function getHourRadixDeptCentre() {\n      var _this2 = this;\n\n      _getHourRadixDeptCentre().then(function (res) {\n        res.data.data.forEach(function (item) {\n          _this2.CentreList.push({\n            value: item.parentId,\n            label: item.parentName\n          });\n        });\n        _this2.query4.parentId = _this2.CentreList[0].value;\n      });\n    },\n    // 部门\n    getHourRadix: function getHourRadix() {\n      var _this3 = this;\n\n      this.optionBar.xAxis[0].data = [];\n      this.optionBar.series[0].data = [];\n      this.isShow = true;\n      this.isShow2 = false;\n      this.isShow3 = false;\n      this.isShow4 = false;\n      this.isShow5 = false;\n      getHourRadixUserBySum(this.query1).then(function (response) {\n        var deptName = response.data.data[0].deptName;\n        _this3.optionBar.title.text = \"\".concat(deptName, \"\\u6210\\u5458\\u5DE5\\u65F6\\u6392\\u884C\");\n        var workTotalNum = response.data.data[0].workTotalNum - 1;\n        _this3.optionBar.series[0].markLine.data[1].yAxis = workTotalNum * 9;\n        response.data.data.forEach(function (item, index) {\n          _this3.optionBar.xAxis[0].data[index] = item.userName;\n          _this3.optionBar.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this3.drawBar1();\n      });\n    },\n    // 个人\n    getHourRadix2: function getHourRadix2() {\n      var _this4 = this;\n\n      this.isShow2 = true;\n      this.isShow = false;\n      this.isShow3 = false;\n      this.isShow4 = false;\n      this.isShow5 = false;\n      getHourRadixUserBySum(this.query2).then(function (response) {\n        var workTotalNum = response.data.data[0].workTotalNum - 1;\n        _this4.optionBar2.series[0].markLine.data[1].yAxis = workTotalNum * 9;\n        _this4.optionBar2.series[0].markLine.data[2].yAxis = workTotalNum * 11;\n        response.data.data.forEach(function (item, index) {\n          //console.log(item);\n          _this4.optionBar2.xAxis[0].data[index] = item.userName;\n          _this4.optionBar2.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this4.drawBar2();\n      });\n    },\n    // 公司\n    getHourRadix3: function getHourRadix3() {\n      var _this5 = this;\n\n      this.optionBar3.xAxis[0].data = [];\n      this.optionBar3.series[0].data = [];\n      this.isShow3 = true;\n      this.isShow = false;\n      this.isShow2 = false;\n      this.isShow4 = false;\n      this.isShow5 = false;\n\n      if (this.query3.type == 1) {\n        _getHourRadixDeptCentre(this.query3).then(function (res) {\n          _this5.optionBar3.title.text = \"\\u516C\\u53F8\\u4E2D\\u5FC3\\u5DE5\\u65F6\\u6392\\u884C\";\n          res.data.data.forEach(function (item, index) {\n            // console.log(item);\n            _this5.optionBar3.xAxis[0].data[index] = item.parentName;\n            _this5.optionBar3.series[0].data[index] = item.avgMin.toFixed(2);\n          });\n\n          _this5.drawBar3();\n        });\n      } else if (this.query3.type == 2) {\n        _getHourRadixDept(this.query3).then(function (response) {\n          _this5.optionBar3.title.text = \"\\u516C\\u53F8\\u90E8\\u95E8\\u5DE5\\u65F6\\u6392\\u884C\";\n          response.data.data.forEach(function (item, index) {\n            // console.log(item);\n            _this5.optionBar3.xAxis[0].data[index] = item.deptName;\n            _this5.optionBar3.series[0].data[index] = item.avgNum.toFixed(2);\n          });\n\n          _this5.drawBar3();\n        });\n      }\n    },\n    // 昨日\n    getHourRadix4: function getHourRadix4() {\n      var _this6 = this;\n\n      this.isShow = false;\n      this.isShow2 = false;\n      this.isShow3 = false;\n      this.isShow4 = true;\n      this.isShow5 = false;\n      getHourRadixUserYesterday().then(function (res) {\n        var time = res.data.data[0].time;\n        var reg = /(\\d{4})\\-(\\d{2})\\-(\\d{2})/;\n        var date = time.replace(reg, '$1年$2月$3日');\n        _this6.optionBar4.title.text = \"\".concat(date, \"\\u4E2A\\u4EBA\\u5DE5\\u65F6\\u6392\\u884C\");\n        res.data.data.forEach(function (item, index) {\n          // console.log(item);\n          _this6.optionBar4.xAxis[0].data[index] = item.userName;\n          _this6.optionBar4.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this6.drawBar4();\n      });\n    },\n    // 中心\n    getHourRadix5: function getHourRadix5() {\n      var _this7 = this;\n\n      this.optionBar5.xAxis[0].data = [];\n      this.optionBar5.series[0].data = [];\n      this.isShow = false;\n      this.isShow2 = false;\n      this.isShow3 = false;\n      this.isShow4 = false;\n      this.isShow5 = true;\n      getHourRadixDeptCentreuser(this.query4).then(function (response) {\n        var parentName = response.data.data[0].parentName;\n        _this7.optionBar5.title.text = \"\".concat(parentName, \"\\u5DE5\\u65F6\\u6392\\u884C\");\n        var workTotalNum = response.data.data[0].workTotalNum - 1;\n        _this7.optionBar5.series[0].markLine.data[1].yAxis = workTotalNum * 9;\n        _this7.optionBar5.series[0].markLine.data[2].yAxis = workTotalNum * 11;\n        response.data.data.forEach(function (item, index) {\n          //console.log(item);\n          _this7.optionBar5.xAxis[0].data[index] = item.userName;\n          _this7.optionBar5.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this7.drawBar5();\n      });\n    },\n    drawBar1: function drawBar1() {\n      var bar1 = this.$echarts.init(document.getElementById('userBar'));\n      bar1.setOption(this.optionBar, window.onresize = bar1.resize);\n      bar1.resize();\n      window.addEventListener('resize', function () {\n        bar1.resize();\n      });\n    },\n    drawBar2: function drawBar2() {\n      var bar2 = this.$echarts.init(document.getElementById('userBar2'));\n      bar2.setOption(this.optionBar2, window.onresize = bar2.resize);\n      bar2.resize();\n      window.addEventListener('resize', function () {\n        bar2.resize();\n      });\n    },\n    drawBar3: function drawBar3() {\n      var bar3 = this.$echarts.init(document.getElementById('userBar3'));\n      bar3.setOption(this.optionBar3, window.onresize = bar3.resize);\n      bar3.resize();\n      window.addEventListener('resize', function () {\n        bar3.resize();\n      });\n    },\n    drawBar4: function drawBar4() {\n      var bar4 = this.$echarts.init(document.getElementById('userBar4'));\n      bar4.setOption(this.optionBar4, window.onresize = bar4.resize);\n      bar4.resize();\n      window.addEventListener('resize', function () {\n        bar4.resize();\n      });\n    },\n    drawBar5: function drawBar5() {\n      var bar5 = this.$echarts.init(document.getElementById('userBar5'));\n      bar5.setOption(this.optionBar5, window.onresize = bar5.resize);\n      bar5.resize();\n      window.addEventListener('resize', function () {\n        bar5.resize();\n      });\n    }\n  }\n};",null]}