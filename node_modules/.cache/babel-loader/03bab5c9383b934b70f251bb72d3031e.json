{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\other\\Act.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\other\\Act.vue","mtime":1594003824563},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getModelPage as _getModelPage, insertModel, deployModel, delModel } from \"../../api/other/act.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      query: {\n        current: 1,\n        size: 10\n      },\n      listType: '1',\n      pages: 0,\n      total: 0,\n      dialogTitle: \"\",\n      listLoading: false,\n      dialogVisible: false,\n      saving: false,\n      list: [],\n      formData: {\n        newData: true,\n        name: \"\",\n        key: \"\",\n        category: \"\",\n        desc: \"\"\n      },\n      rules: {\n        key: [{\n          required: true,\n          message: \"请输入模型标识\"\n        }],\n        category: [{\n          required: true,\n          message: \"请输入流程分类\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入模型名称\"\n        }],\n        desc: [{\n          required: true,\n          message: \"请输入描述\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getModelPage();\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\"])),\n  methods: {\n    getModelPage: function getModelPage() {\n      var _this = this;\n\n      this.loading = true;\n\n      _getModelPage(this.query).then(function (response) {\n        _this.loading = false; //console.log(response.data.data)\n\n        _this.total = response.data.data.total;\n        _this.query.current = response.data.data.current;\n        _this.query.size = response.data.data.size;\n        _this.list = response.data.data.records;\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.size = val;\n      this.getModelPage();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.current = val;\n      this.getModelPage();\n    },\n    handleModal: function handleModal(data) {\n      if (data) {\n        this.dialogTitle = \"编辑模型 - \" + data.name;\n        this.formData.newData = false;\n        this.formData.key = data.key;\n        this.formData.category = data.category;\n        this.formData.name = data.name;\n        this.formData.desc = data.desc;\n      } else {\n        this.dialogTitle = \"添加模型\";\n        this.formData.newData = true;\n        this.formData.key = \"\";\n        this.formData.category = \"\";\n        this.formData.name = \"\";\n        this.formData.desc = \"\";\n      }\n\n      this.dialogVisible = true;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      this.$refs[\"formData\"].validate(function (valid) {\n        if (valid) {\n          _this2.saving = true;\n\n          if (!_this2.formData.newData) {\n            console.log(_this2.formData); // putObj(this.formData)\n            //     .then(res => {\n            //         if (res.data.data) {\n            //             this.dialogVisible = false;\n            //             this.getJobList();\n            //         }\n            //     })\n            //     .finally(() => {\n            //         this.saving = false;\n            //     });\n          } else {\n            insertModel(_this2.formData).then(function (res) {\n              if (res.data.data) {\n                _this2.dialogVisible = false;\n\n                _this2.getModelPage();\n              }\n            }).finally(function () {\n              _this2.saving = false;\n            });\n          }\n        }\n      });\n    },\n    handleModalDesign: function handleModalDesign(data) {\n      console.log(data);\n      this.$router.push({\n        path: \"/other/act_design/\" + data.id\n      });\n    },\n    handleModalDeploy: function handleModalDeploy(row) {\n      var _this3 = this;\n\n      if (row.id) {\n        this.$confirm(\"确认部署 \" + row.name + \" 吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          deployModel(row.id).then(function (res) {\n            console.log(res);\n\n            _this3.getModelPage();\n          });\n        });\n      }\n    },\n    // 删除\n    handleDel: function handleDel(index, row) {\n      var _this4 = this;\n\n      if (row.id) {\n        this.$confirm(\"确认删除 \" + row.name + \" 吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          delModel(row.id).then(function (res) {\n            console.log(res);\n\n            _this4.getModelPage();\n          });\n        });\n      }\n    },\n    openList: function openList(val) {\n      if (val == 2) {\n        this.$router.push({\n          path: '/other/process'\n        });\n      }\n    }\n  },\n  mounted: function mounted() {}\n};",null]}