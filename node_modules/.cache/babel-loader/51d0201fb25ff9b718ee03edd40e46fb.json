{"remainingRequest":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DDMS\\src\\utils\\date.js","dependencies":[{"path":"D:\\DDMS\\src\\utils\\date.js","mtime":1588235430035},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport var calcDate = function calcDate(date1, date2) {\n  var date3 = date2 - date1;\n  var days = Math.floor(date3 / (24 * 3600 * 1000));\n  var leave1 = date3 % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数\n\n  var hours = Math.floor(leave1 / (3600 * 1000));\n  var leave2 = leave1 % (3600 * 1000); // 计算小时数后剩余的毫秒数\n\n  var minutes = Math.floor(leave2 / (60 * 1000));\n  var leave3 = leave2 % (60 * 1000); // 计算分钟数后剩余的毫秒数\n\n  var seconds = Math.round(date3 / 1000);\n  return {\n    leave1: leave1,\n    leave2: leave2,\n    leave3: leave3,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n};\n/**\r\n * 日期格式化\r\n */\n\nexport function dateFormat(date) {\n  var format = \"yyyy-MM-dd hh:mm:ss\";\n\n  if (date !== \"Invalid Date\") {\n    var o = {\n      \"M+\": date.getMonth() + 1,\n      // month\n      \"d+\": date.getDate(),\n      // day\n      \"h+\": date.getHours(),\n      // hour\n      \"m+\": date.getMinutes(),\n      // minute\n      \"s+\": date.getSeconds(),\n      // second\n      \"q+\": Math.floor((date.getMonth() + 3) / 3),\n      // quarter\n      S: date.getMilliseconds() // millisecond\n\n    };\n\n    if (/(y+)/.test(format)) {\n      format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n\n    for (var k in o) {\n      if (new RegExp(\"(\" + k + \")\").test(format)) {\n        format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n      }\n    }\n\n    return format;\n  }\n\n  return \"\";\n}\nexport function formatTime(date, fmt) {\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  }\n\n  var o = {\n    \"M+\": date.getMonth() + 1,\n    \"d+\": date.getDate(),\n    \"h+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds()\n  };\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n      var str = o[k] + \"\";\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : \"0\" + str).substr(str.length);\n    }\n  }\n\n  return fmt;\n}",{"version":3,"sources":["D:/DDMS/src/utils/date.js"],"names":["calcDate","date1","date2","date3","days","Math","floor","leave1","hours","leave2","minutes","leave3","seconds","round","dateFormat","date","format","o","getMonth","getDate","getHours","getMinutes","getSeconds","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","formatTime","fmt","str"],"mappings":"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","sourcesContent":["export const calcDate = (date1, date2) => {\r\n    var date3 = date2 - date1;\r\n\r\n    var days = Math.floor(date3 / (24 * 3600 * 1000));\r\n\r\n    var leave1 = date3 % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数\r\n    var hours = Math.floor(leave1 / (3600 * 1000));\r\n\r\n    var leave2 = leave1 % (3600 * 1000); // 计算小时数后剩余的毫秒数\r\n    var minutes = Math.floor(leave2 / (60 * 1000));\r\n\r\n    var leave3 = leave2 % (60 * 1000); // 计算分钟数后剩余的毫秒数\r\n    var seconds = Math.round(date3 / 1000);\r\n    return {\r\n        leave1,\r\n        leave2,\r\n        leave3,\r\n        days: days,\r\n        hours: hours,\r\n        minutes: minutes,\r\n        seconds: seconds\r\n    };\r\n};\r\n\r\n/**\r\n * 日期格式化\r\n */\r\nexport function dateFormat(date) {\r\n    let format = \"yyyy-MM-dd hh:mm:ss\";\r\n    if (date !== \"Invalid Date\") {\r\n        var o = {\r\n            \"M+\": date.getMonth() + 1, // month\r\n            \"d+\": date.getDate(), // day\r\n            \"h+\": date.getHours(), // hour\r\n            \"m+\": date.getMinutes(), // minute\r\n            \"s+\": date.getSeconds(), // second\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), // quarter\r\n            S: date.getMilliseconds() // millisecond\r\n        };\r\n        if (/(y+)/.test(format)) {\r\n            format = format.replace(\r\n                RegExp.$1,\r\n                (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\r\n            );\r\n        }\r\n        for (var k in o) {\r\n            if (new RegExp(\"(\" + k + \")\").test(format)) {\r\n                format = format.replace(\r\n                    RegExp.$1,\r\n                    RegExp.$1.length === 1\r\n                        ? o[k]\r\n                        : (\"00\" + o[k]).substr((\"\" + o[k]).length)\r\n                );\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport function formatTime(date, fmt) {\r\n    if (/(y+)/.test(fmt)) {\r\n        fmt = fmt.replace(\r\n            RegExp.$1,\r\n            (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\r\n        );\r\n    }\r\n    var o = {\r\n        \"M+\": date.getMonth() + 1,\r\n        \"d+\": date.getDate(),\r\n        \"h+\": date.getHours(),\r\n        \"m+\": date.getMinutes(),\r\n        \"s+\": date.getSeconds()\r\n    };\r\n    for (var k in o) {\r\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n            var str = o[k] + \"\";\r\n            fmt = fmt\r\n                .replace(RegExp.$1, RegExp.$1.length === 1 ? str : \"0\" + str)\r\n                .substr(str.length);\r\n        }\r\n    }\r\n    return fmt;\r\n}\r\n"]}]}