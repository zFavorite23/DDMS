{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DDMS\\src\\filtres\\index.js","dependencies":[{"path":"D:\\DDMS\\src\\filtres\\index.js","mtime":1588235430031},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction pluralize(time, label) {\n  if (time === 1) {\n    return time + label;\n  }\n\n  return time + label + \"s\";\n}\n\nexport function timeAgo(time) {\n  var between = Date.now() / 1000 - Number(time);\n\n  if (between < 3600) {\n    return pluralize(~~(between / 60), \" minute\");\n  } else if (between < 86400) {\n    return pluralize(~~(between / 3600), \" hour\");\n  } else {\n    return pluralize(~~(between / 86400), \" day\");\n  }\n}\nexport function parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n\n  if ((time + \"\").length === 10) {\n    time = +time * 1000;\n  }\n\n  var format = cFormat || \"{y}-{m}-{d} {h}:{i}:{s}\";\n  var date;\n\n  if (_typeof(time) === \"object\") {\n    date = time;\n  } else {\n    date = new Date(parseInt(time));\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var timeStr = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key];\n    if (key === \"a\") return [\"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"日\"][value - 1];\n\n    if (result.length > 0 && value < 10) {\n      value = \"0\" + value;\n    }\n\n    return value || 0;\n  });\n  return timeStr;\n}\nexport function formatTime(time, option) {\n  time = +time * 1000;\n  var d = new Date(time);\n  var now = Date.now();\n  var diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return \"刚刚\";\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + \"分钟前\";\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + \"小时前\";\n  } else if (diff < 3600 * 24 * 2) {\n    return \"1天前\";\n  }\n\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + \"月\" + d.getDate() + \"日\" + d.getHours() + \"时\" + d.getMinutes() + \"分\";\n  }\n}\n/*  数字 格式化 */\n\nexport function nFormatter(num, digits) {\n  var si = [{\n    value: 1e18,\n    symbol: \"E\"\n  }, {\n    value: 1e15,\n    symbol: \"P\"\n  }, {\n    value: 1e12,\n    symbol: \"T\"\n  }, {\n    value: 1e9,\n    symbol: \"G\"\n  }, {\n    value: 1e6,\n    symbol: \"M\"\n  }, {\n    value: 1e3,\n    symbol: \"k\"\n  }];\n\n  for (var i = 0; i < si.length; i++) {\n    if (num >= si[i].value) {\n      return (num / si[i].value + 0.1).toFixed(digits).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, \"$1\") + si[i].symbol;\n    }\n  }\n\n  return num.toString();\n}\nexport function html2Text(val) {\n  var div = document.createElement(\"div\");\n  div.innerHTML = val;\n  return div.textContent || div.innerText;\n}\nexport function toThousandslsFilter(num) {\n  return (+num || 0).toString().replace(/^-?\\d+/g, function (m) {\n    return m.replace(/(?=(?!\\b)(\\d{3})+$)/g, \",\");\n  });\n}\n/**\r\n * 格式化文件大小\r\n * @param value\r\n * @returns {*}\r\n */\n\nexport function renderSize(value) {\n  if (!value || value === null || value === \"\") {\n    return \"\";\n  }\n\n  var unitArr = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  var srcsize = parseFloat(value);\n  var index = Math.floor(Math.log(srcsize) / Math.log(1024));\n  var size = srcsize / Math.pow(1024, index);\n  size = size.toFixed(0); // 保留的小数位数\n\n  return size + unitArr[index];\n}",null]}