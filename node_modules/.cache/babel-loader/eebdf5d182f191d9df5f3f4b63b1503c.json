{"remainingRequest":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\ability\\dept\\Hour.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\ability\\dept\\Hour.vue","mtime":1589439025537},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getHourRadixUserBySum, getHourRadixUserYesterday } from \"../../../api/checkwork/hour.js\";\nimport { getHourRadixDept } from \"../../../api/checkwork/hour.js\";\nimport { dateFormat } from \"../../../utils/date.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      query1: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date()),\n        deptId: null\n      },\n      query2: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date())\n      },\n      query3: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date())\n      },\n      isShow: false,\n      isShow2: false,\n      isShow3: false,\n      isShow4: false,\n      optionBar: {\n        title: {\n          text: '部门成员工时排行' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: ''\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar2: {\n        title: {\n          text: '公司个人工时排行' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: ''\n            }, {\n              name: '劳模线',\n              itemStyle: {\n                normal: {\n                  color: 'blue'\n                }\n              },\n              label: {\n                formatter: '劳模线'\n              },\n              yAxis: ''\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar3: {\n        title: {\n          text: '公司部门工时排行' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      },\n      optionBar4: {\n        title: {\n          text: '' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          }\n        }],\n        series: [{\n          name: '总工时',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: 'green'\n                }\n              },\n              label: {\n                formatter: '平均线'\n              }\n            }, {\n              name: '达标线',\n              itemStyle: {\n                normal: {\n                  color: 'red'\n                }\n              },\n              label: {\n                formatter: '达标线'\n              },\n              yAxis: 9\n            }, {\n              name: '劳模线',\n              itemStyle: {\n                normal: {\n                  color: 'blue'\n                }\n              },\n              label: {\n                formatter: '劳模线'\n              },\n              yAxis: 11\n            }]\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'black',\n            formatter: function formatter(params) {\n              return params.value;\n            }\n          }\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['permissions', 'deptId'])),\n  created: function created() {\n    this.query1.deptId = this.deptId;\n    this.getHourRadix();\n  },\n  mounted: function mounted() {},\n  methods: {\n    getHourRadix: function getHourRadix() {\n      var _this = this;\n\n      this.isShow = true;\n      this.isShow2 = false;\n      this.isShow3 = false;\n      this.isShow4 = false;\n      getHourRadixUserBySum(this.query1).then(function (response) {\n        var workTotalNum = response.data.data[0].workTotalNum - 1;\n        _this.optionBar.series[0].markLine.data[1].yAxis = workTotalNum * 9;\n        response.data.data.forEach(function (item, index) {\n          _this.optionBar.xAxis[0].data[index] = item.userName;\n          _this.optionBar.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this.drawBar1();\n      });\n    },\n    getHourRadix2: function getHourRadix2() {\n      var _this2 = this;\n\n      this.isShow2 = true;\n      this.isShow = false;\n      this.isShow3 = false;\n      this.isShow4 = false;\n      getHourRadixUserBySum(this.query2).then(function (response) {\n        var workTotalNum = response.data.data[1].workTotalNum - 1;\n        _this2.optionBar2.series[0].markLine.data[1].yAxis = workTotalNum * 9;\n        _this2.optionBar2.series[0].markLine.data[2].yAxis = workTotalNum * 11;\n        response.data.data.forEach(function (item, index) {\n          //console.log(item);\n          _this2.optionBar2.xAxis[0].data[index] = item.userName;\n          _this2.optionBar2.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this2.drawBar2();\n      });\n    },\n    getHourRadix3: function getHourRadix3() {\n      var _this3 = this;\n\n      this.isShow3 = true;\n      this.isShow = false;\n      this.isShow2 = false;\n      this.isShow4 = false;\n      getHourRadixDept(this.query3).then(function (response) {\n        response.data.data.forEach(function (item, index) {\n          // console.log(item);\n          _this3.optionBar3.xAxis[0].data[index] = item.deptName;\n          _this3.optionBar3.series[0].data[index] = item.avgNum.toFixed(2);\n        });\n\n        _this3.drawBar3();\n      });\n    },\n    getHourRadix4: function getHourRadix4() {\n      var _this4 = this;\n\n      this.isShow = false;\n      this.isShow2 = false;\n      this.isShow3 = false;\n      this.isShow4 = true;\n      getHourRadixUserYesterday().then(function (res) {\n        var time = res.data.data[0].time;\n        var reg = /(\\d{4})\\-(\\d{2})\\-(\\d{2})/;\n        var date = time.replace(reg, \"$1年$2月$3日\");\n        _this4.optionBar4.title.text = \"\".concat(date, \"\\u4E2A\\u4EBA\\u5DE5\\u65F6\\u6392\\u884C\");\n        res.data.data.forEach(function (item, index) {\n          // console.log(item);\n          _this4.optionBar4.xAxis[0].data[index] = item.userName;\n          _this4.optionBar4.series[0].data[index] = item.sumNum.toFixed(2);\n        });\n\n        _this4.drawBar4();\n      });\n    },\n    drawBar1: function drawBar1() {\n      var bar1 = this.$echarts.init(document.getElementById('userBar'));\n      bar1.setOption(this.optionBar, window.onresize = bar1.resize);\n      bar1.resize();\n      window.addEventListener('resize', function () {\n        bar1.resize();\n      });\n    },\n    drawBar2: function drawBar2() {\n      var bar2 = this.$echarts.init(document.getElementById('userBar2'));\n      bar2.setOption(this.optionBar2, window.onresize = bar2.resize);\n      bar2.resize();\n      window.addEventListener('resize', function () {\n        bar2.resize();\n      });\n    },\n    drawBar3: function drawBar3() {\n      var bar3 = this.$echarts.init(document.getElementById('userBar3'));\n      bar3.setOption(this.optionBar3, window.onresize = bar3.resize);\n      bar3.resize();\n      window.addEventListener('resize', function () {\n        bar3.resize();\n      });\n    },\n    drawBar4: function drawBar4() {\n      var bar4 = this.$echarts.init(document.getElementById('userBar4'));\n      bar4.setOption(this.optionBar4, window.onresize = bar4.resize);\n      bar4.resize();\n      window.addEventListener('resize', function () {\n        bar4.resize();\n      });\n    }\n  }\n};",{"version":3,"sources":["Hour.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"divID\" style=\"width: 100%; color: #1f2d3d;\">\r\n        <el-form :inline=\"true\" :model=\"query1\" v-show=\"isShow\">\r\n            <el-form-item label=\"开始日期：\">\r\n                <el-date-picker v-model=\"query1.startDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"结束日期：\">\r\n                <el-date-picker v-model=\"query1.endDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item><el-button type=\"primary\" size=\"medium\" v-on:click=\"getHourRadix()\" icon=\"el-icon-search\">搜索</el-button></el-form-item>\r\n        </el-form>\r\n\r\n        <el-form :inline=\"true\" :model=\"query2\" v-show=\"isShow2\">\r\n            <el-form-item label=\"开始日期：\">\r\n                <el-date-picker v-model=\"query2.startDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"结束日期：\">\r\n                <el-date-picker v-model=\"query2.endDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item><el-button type=\"primary\" size=\"medium\" v-on:click=\"getHourRadix2()\" icon=\"el-icon-search\">搜索</el-button></el-form-item>\r\n        </el-form>\r\n\r\n        <el-form :inline=\"true\" :model=\"query3\" v-show=\"isShow3\">\r\n            <el-form-item label=\"开始日期：\">\r\n                <el-date-picker v-model=\"query3.startDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"结束日期：\">\r\n                <el-date-picker v-model=\"query3.endDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item><el-button type=\"primary\" size=\"medium\" v-on:click=\"getHourRadix3()\" icon=\"el-icon-search\">搜索</el-button></el-form-item>\r\n        </el-form>\r\n        <div style=\"float: right;\">\r\n            <el-button type=\"primary\" size=\"medium\" style=\"padding-top: 0.4rem;\" v-on:click=\"getHourRadix\">部门成员排名</el-button>\r\n            <el-button type=\"primary\" size=\"medium\" style=\"padding-top: 0.4rem;\" v-on:click=\"getHourRadix3\">公司部门排名</el-button>\r\n            <el-button type=\"primary\" size=\"medium\" style=\"padding-top: 0.4rem;\" v-on:click=\"getHourRadix2\">公司个人排名</el-button>\r\n            <el-button type=\"primary\" size=\"medium\" style=\"padding-top: 0.4rem;\" v-on:click=\"getHourRadix4\">昨日个人排名</el-button>\r\n        </div>\r\n\r\n        <div id=\"userBar\" class=\"bar\" v-show=\"isShow\"></div>\r\n        <div id=\"userBar2\" class=\"bar\" v-show=\"isShow2\"></div>\r\n        <div id=\"userBar3\" class=\"bar\" v-show=\"isShow3\"></div>\r\n        <div id=\"userBar4\" class=\"bar\" v-show=\"isShow4\" style=\"margin-top: 29px;\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getHourRadixUserBySum, getHourRadixUserYesterday } from '../../../api/checkwork/hour.js';\r\nimport { getHourRadixDept } from '../../../api/checkwork/hour.js';\r\nimport { dateFormat } from '../../../utils/date.js';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query1: {\r\n                startDay: dateFormat(new Date()).substr(0, 7) + '-01',\r\n                endDay: dateFormat(new Date()),\r\n                deptId: null\r\n            },\r\n            query2: {\r\n                startDay: dateFormat(new Date()).substr(0, 7) + '-01',\r\n                endDay: dateFormat(new Date())\r\n            },\r\n            query3: {\r\n                startDay: dateFormat(new Date()).substr(0, 7) + '-01',\r\n                endDay: dateFormat(new Date())\r\n            },\r\n            isShow: false,\r\n            isShow2: false,\r\n            isShow3: false,\r\n            isShow4: false,\r\n            optionBar: {\r\n                title: {\r\n                    text: '部门成员工时排行'\r\n                    //subtext: '纯属虚构'\r\n                },\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        restore: { show: true },\r\n                        saveAsImage: { show: true }\r\n                    }\r\n                },\r\n                color: ['#3398DB'],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: [],\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        },\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        splitLine: { show: false }\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: '总工时',\r\n                        type: 'bar',\r\n                        barWidth: '40%',\r\n                        data: [],\r\n                        markLine: {\r\n                            data: [\r\n                                {\r\n                                    type: 'average',\r\n                                    name: '平均值',\r\n                                    itemStyle: { normal: { color: 'green' } },\r\n                                    label: {\r\n                                        formatter: '平均线'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    name: '达标线',\r\n                                    itemStyle: { normal: { color: 'red' } },\r\n                                    label: {\r\n                                        formatter: '达标线'\r\n                                    },\r\n                                    yAxis: ''\r\n                                },\r\n                            ]\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            color: 'black',\r\n                            formatter: function(params) {\r\n                                return params.value;\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            optionBar2: {\r\n                title: {\r\n                    text: '公司个人工时排行'\r\n                    //subtext: '纯属虚构'\r\n                },\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        restore: { show: true },\r\n                        saveAsImage: { show: true }\r\n                    }\r\n                },\r\n                color: ['#3398DB'],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: [],\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        },\r\n                        axisLabel: {\r\n                            //底部文字倾斜\r\n                            interval: 0,\r\n                            rotate: 25\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        splitLine: { show: false }\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: '总工时',\r\n                        type: 'bar',\r\n                        barWidth: '40%',\r\n                        data: [],\r\n                        markLine: {\r\n                            data: [\r\n                                {\r\n                                    type: 'average',\r\n                                    name: '平均值',\r\n                                    itemStyle: { normal: { color: 'green' } },\r\n                                    label: {\r\n                                        formatter: '平均线'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    name: '达标线',\r\n                                    itemStyle: { normal: { color: 'red' } },\r\n                                    label: {\r\n                                        formatter: '达标线'\r\n                                    },\r\n                                    yAxis: ''\r\n                                },\r\n                                {\r\n                                    name: '劳模线',\r\n                                    itemStyle: { normal: { color: 'blue' } },\r\n                                    label: {\r\n                                        formatter: '劳模线'\r\n                                    },\r\n                                    yAxis: ''\r\n                                }\r\n                            ]\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            color: 'black',\r\n                            formatter: function(params) {\r\n                                return params.value;\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            optionBar3: {\r\n                title: {\r\n                    text: '公司部门工时排行'\r\n                    //subtext: '纯属虚构'\r\n                },\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        restore: { show: true },\r\n                        saveAsImage: { show: true }\r\n                    }\r\n                },\r\n                color: ['#3398DB'],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: [],\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        },\r\n                        axisLabel: {\r\n                            //底部文字倾斜\r\n                            interval: 0,\r\n                            rotate: 25\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        splitLine: { show: false }\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: '总工时',\r\n                        type: 'bar',\r\n                        barWidth: '40%',\r\n                        data: [],\r\n                        markLine: {\r\n                            data: [\r\n                                {\r\n                                    type: 'average',\r\n                                    name: '平均值',\r\n                                    itemStyle: { normal: { color: 'green' } },\r\n                                    label: {\r\n                                        formatter: '平均线'\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            color: 'black',\r\n                            formatter: function(params) {\r\n                                return params.value;\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            optionBar4: {\r\n                title: {\r\n                    text: ''\r\n                    //subtext: '纯属虚构'\r\n                },\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        restore: { show: true },\r\n                        saveAsImage: { show: true }\r\n                    }\r\n                },\r\n                color: ['#3398DB'],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: [],\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        },\r\n                        axisLabel: {\r\n                            //底部文字倾斜\r\n                            interval: 0,\r\n                            rotate: 25\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        splitLine: { show: false }\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: '总工时',\r\n                        type: 'bar',\r\n                        barWidth: '40%',\r\n                        data: [],\r\n                        markLine: {\r\n                            data: [\r\n                                {\r\n                                    type: 'average',\r\n                                    name: '平均值',\r\n                                    itemStyle: { normal: { color: 'green' } },\r\n                                    label: {\r\n                                        formatter: '平均线'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    name: '达标线',\r\n                                    itemStyle: { normal: { color: 'red' } },\r\n                                    label: {\r\n                                        formatter: '达标线'\r\n                                    },\r\n                                    yAxis: 9\r\n                                },\r\n                                {\r\n                                    name: '劳模线',\r\n                                    itemStyle: { normal: { color: 'blue' } },\r\n                                    label: {\r\n                                        formatter: '劳模线'\r\n                                    },\r\n                                    yAxis: 11\r\n                                }\r\n                            ]\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            color: 'black',\r\n                            formatter: function(params) {\r\n                                return params.value;\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions', 'deptId'])\r\n    },\r\n    created() {\r\n        this.query1.deptId = this.deptId;\r\n        this.getHourRadix();\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        getHourRadix() {\r\n            this.isShow = true;\r\n            this.isShow2 = false;\r\n            this.isShow3 = false;\r\n            this.isShow4 = false;\r\n            getHourRadixUserBySum(this.query1).then(response => {\r\n                var workTotalNum = response.data.data[0].workTotalNum - 1\r\n                this.optionBar.series[0].markLine.data[1].yAxis = workTotalNum * 9\r\n                response.data.data.forEach((item, index) => {\r\n                    this.optionBar.xAxis[0].data[index] = item.userName;\r\n                    this.optionBar.series[0].data[index] = item.sumNum.toFixed(2);\r\n                });\r\n                this.drawBar1();\r\n            });\r\n        },\r\n        getHourRadix2() {\r\n            this.isShow2 = true;\r\n            this.isShow = false;\r\n            this.isShow3 = false;\r\n            this.isShow4 = false;\r\n            getHourRadixUserBySum(this.query2).then(response => {\r\n                var workTotalNum = response.data.data[1].workTotalNum - 1;\r\n                this.optionBar2.series[0].markLine.data[1].yAxis = workTotalNum * 9;\r\n                this.optionBar2.series[0].markLine.data[2].yAxis = workTotalNum * 11;\r\n                response.data.data.forEach((item, index) => {\r\n                    //console.log(item);\r\n                    this.optionBar2.xAxis[0].data[index] = item.userName;\r\n                    this.optionBar2.series[0].data[index] = item.sumNum.toFixed(2);\r\n                });\r\n                this.drawBar2();\r\n            });\r\n        },\r\n        getHourRadix3() {\r\n            this.isShow3 = true;\r\n            this.isShow = false;\r\n            this.isShow2 = false;\r\n            this.isShow4 = false;\r\n            getHourRadixDept(this.query3).then(response => {\r\n                response.data.data.forEach((item, index) => {\r\n                    // console.log(item);\r\n                    this.optionBar3.xAxis[0].data[index] = item.deptName;\r\n                    this.optionBar3.series[0].data[index] = item.avgNum.toFixed(2);\r\n                });\r\n                this.drawBar3();\r\n            });\r\n        },\r\n        getHourRadix4() {\r\n            this.isShow = false;\r\n            this.isShow2 = false;\r\n            this.isShow3 = false;\r\n            this.isShow4 = true;\r\n            getHourRadixUserYesterday().then(res => {\r\n                var time = res.data.data[0].time\r\n                var reg = /(\\d{4})\\-(\\d{2})\\-(\\d{2})/;\r\n                var date = time.replace(reg, \"$1年$2月$3日\");\r\n                this.optionBar4.title.text = `${date}个人工时排行`\r\n                res.data.data.forEach((item, index) => {\r\n                    // console.log(item);\r\n                    this.optionBar4.xAxis[0].data[index] = item.userName;\r\n                    this.optionBar4.series[0].data[index] = item.sumNum.toFixed(2);\r\n                });\r\n                this.drawBar4();\r\n            });\r\n        },\r\n\r\n        drawBar1() {\r\n            let bar1 = this.$echarts.init(document.getElementById('userBar'));\r\n\r\n            bar1.setOption(this.optionBar, (window.onresize = bar1.resize));\r\n            bar1.resize();\r\n            window.addEventListener('resize', function() {\r\n                bar1.resize();\r\n            });\r\n        },\r\n        drawBar2() {\r\n            let bar2 = this.$echarts.init(document.getElementById('userBar2'));\r\n\r\n            bar2.setOption(this.optionBar2, (window.onresize = bar2.resize));\r\n            bar2.resize();\r\n            window.addEventListener('resize', function() {\r\n                bar2.resize();\r\n            });\r\n        },\r\n        drawBar3() {\r\n            let bar3 = this.$echarts.init(document.getElementById('userBar3'));\r\n\r\n            bar3.setOption(this.optionBar3, (window.onresize = bar3.resize));\r\n            bar3.resize();\r\n            window.addEventListener('resize', function() {\r\n                bar3.resize();\r\n            });\r\n        },\r\n        drawBar4() {\r\n            let bar4 = this.$echarts.init(document.getElementById('userBar4'));\r\n\r\n            bar4.setOption(this.optionBar4, (window.onresize = bar4.resize));\r\n            bar4.resize();\r\n            window.addEventListener('resize', function() {\r\n                bar4.resize();\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style type=\"text/scss\" scoped lang=\"scss\">\r\n.bar {\r\n    margin-top: 0px;\r\n    width: 100%;\r\n    height: 600px;\r\n    float: left;\r\n}\r\n</style>\n"],"sourceRoot":"src/views/ability/dept"}]}