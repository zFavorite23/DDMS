{"remainingRequest":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\checkwork\\hour\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\checkwork\\hour\\User.vue","mtime":1592810761668},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 表格导出\nimport FileSaver from 'file-saver';\nimport XLSX from 'xlsx';\nimport { getHourRadixUser } from \"../../../api/checkwork/hour.js\";\nimport { dateFormat } from \"../../../utils/date.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      query: {\n        startDay: dateFormat(new Date()).substr(0, 7) + '-01',\n        endDay: dateFormat(new Date()),\n        sortType: '1'\n      },\n      listLoading: false,\n      list: [],\n      optionBar: {\n        title: {\n          text: '个人工时系数' //subtext: '纯属虚构'\n\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: ['#3398DB'],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: [],\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            //底部文字倾斜\n            interval: 0,\n            rotate: 25\n          }\n        }],\n        yAxis: [{\n          type: 'value'\n        }],\n        series: [{\n          name: '个人系数',\n          type: 'bar',\n          barWidth: '40%',\n          data: [],\n          markLine: {\n            data: [{\n              type: 'average',\n              name: '平均值',\n              itemStyle: {\n                normal: {\n                  color: '#dc143c'\n                }\n              }\n            }, {\n              name: '标线起点',\n              value: 1.0,\n              xAxis: 0,\n              yAxis: 1.0,\n              itemStyle: {\n                normal: {\n                  color: '#dc143c'\n                }\n              }\n            }]\n          }\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['permissions'])),\n  created: function created() {\n    //const pageWidth = document.getElementById(\"divID\").offsetWidth;\n    //document.getElementById(\"bar\").style =\n    this.$nextTick(function () {\n      this.getHourRadix();\n    });\n  },\n  mounted: function mounted() {},\n  methods: {\n    getHourRadix: function getHourRadix() {\n      var _this = this;\n\n      this.listLoading = true;\n      getHourRadixUser(this.query).then(function (response) {\n        console.log(response);\n        _this.listLoading = false;\n        _this.list = response.data.data;\n\n        _this.list.forEach(function (item, index) {\n          console.log(item.workTotalNum);\n          _this.optionBar.xAxis[0].data[index] = item.userName;\n          _this.optionBar.series[0].data[index] = item.radix;\n        });\n\n        _this.drawBar();\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    drawBar: function drawBar() {\n      var bar = this.$echarts.init(document.getElementById('userBar'));\n      bar.setOption(this.optionBar, window.onresize = bar.resize);\n      bar.resize();\n      window.addEventListener('resize', function () {\n        bar.resize();\n      });\n    },\n    exportExcel: function exportExcel() {\n      /* out-table关联导出的dom节点  */\n      var wb = XLSX.utils.table_to_book(document.querySelector('#out-table'));\n      /* get binary string as output */\n\n      var wbout = XLSX.write(wb, {\n        bookType: 'xlsx',\n        bookSST: true,\n        type: 'array'\n      });\n\n      try {\n        FileSaver.saveAs(new Blob([wbout], {\n          type: 'application/octet-stream'\n        }), '个人工时统计.xlsx');\n      } catch (e) {\n        if (typeof console !== 'undefined') console.log(e, wbout);\n      }\n\n      return wbout;\n    }\n  }\n};",{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"divID\" style=\"width: 100%; color: #1f2d3d;\">\r\n        <el-form :inline=\"true\" :model=\"query\">\r\n            <el-form-item label=\"开始日期：\">\r\n                <el-date-picker v-model=\"query.startDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"结束日期：\">\r\n                <el-date-picker v-model=\"query.endDay\" type=\"date\" placeholder=\"选择日期\" format=\"yyyy 年 MM 月 dd 日\" value-format=\"yyyy-MM-dd\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item><el-button type=\"primary\" size=\"medium\" v-on:click=\"getHourRadix()\" icon=\"el-icon-search\">搜索</el-button></el-form-item>\r\n        </el-form>\r\n\r\n        <div id=\"userBar\" class=\"bar\"></div>\r\n\r\n        <div style=\"margin-top: 650px; position: relative;\">\r\n            <el-button type=\"primary\" size=\"medium\" style=\"position: absolute;top: -50px;right: 50px;\" @click=\"exportExcel()\">导出</el-button>\r\n            <el-row>\r\n                <el-table :data=\"list\" id=\"out-table\" stripe border v-loading=\"listLoading\" style=\"width: 100%;\" :default-sort=\"{ prop: 'workTotalNum', order: 'ascending' }\">\r\n                    <el-table-column prop=\"userName\" min-width=\"100\" label=\"姓名\"></el-table-column>\r\n                    <el-table-column prop=\"workTotalNum\" sortable min-width=\"100\" label=\"应上班天数\"></el-table-column>\r\n                    <el-table-column prop=\"restTotalNum\" sortable min-width=\"100\" label=\"假期上班天数\"></el-table-column>\r\n                    <el-table-column prop=\"totalNum\" sortable min-width=\"100\" label=\"总上班天数\"></el-table-column>\r\n                    <el-table-column prop=\"integralNum\" sortable min-width=\"100\" label=\"总评分\"></el-table-column>\r\n                    <el-table-column prop=\"avgIntegral\" sortable min-width=\"100\" label=\"平均评分\"></el-table-column>\r\n                    <el-table-column prop=\"sumNum\" sortable min-width=\"100\" label=\"总工时\"></el-table-column>\r\n                    <el-table-column prop=\"avgNum\" sortable min-width=\"100\" label=\"平均工时\"></el-table-column>\r\n                    <el-table-column prop=\"radix\" sortable min-width=\"100\" label=\"基数\"></el-table-column>\r\n                </el-table>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// 表格导出\r\nimport FileSaver from 'file-saver';\r\nimport XLSX from 'xlsx';\r\nimport { getHourRadixUser } from '../../../api/checkwork/hour.js';\r\nimport { dateFormat } from '../../../utils/date.js';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                startDay: dateFormat(new Date()).substr(0, 7) + '-01',\r\n                endDay: dateFormat(new Date()),\r\n                sortType: '1'\r\n            },\r\n            listLoading: false,\r\n            list: [],\r\n            optionBar: {\r\n                title: {\r\n                    text: '个人工时系数'\r\n                    //subtext: '纯属虚构'\r\n                },\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        restore: { show: true },\r\n                        saveAsImage: { show: true }\r\n                    }\r\n                },\r\n                color: ['#3398DB'],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: [],\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        },\r\n                        axisLabel: {\r\n                            //底部文字倾斜\r\n                            interval: 0,\r\n                            rotate: 25\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value'\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: '个人系数',\r\n                        type: 'bar',\r\n                        barWidth: '40%',\r\n                        data: [],\r\n                        markLine: {\r\n                            data: [\r\n                                {\r\n                                    type: 'average',\r\n                                    name: '平均值',\r\n                                    itemStyle: { normal: { color: '#dc143c' } }\r\n                                },\r\n                                {\r\n                                    name: '标线起点',\r\n                                    value: 1.0,\r\n                                    xAxis: 0,\r\n                                    yAxis: 1.0,\r\n                                    itemStyle: { normal: { color: '#dc143c' } }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions'])\r\n    },\r\n    created() {\r\n        //const pageWidth = document.getElementById(\"divID\").offsetWidth;\r\n        //document.getElementById(\"bar\").style =\r\n        this.$nextTick(function() {\r\n            this.getHourRadix();\r\n        });\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        getHourRadix() {\r\n            this.listLoading = true;\r\n            getHourRadixUser(this.query)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    this.listLoading = false;\r\n                    this.list = response.data.data;\r\n                    this.list.forEach((item, index) => {\r\n                        console.log(item.workTotalNum);\r\n                        this.optionBar.xAxis[0].data[index] = item.userName;\r\n                        this.optionBar.series[0].data[index] = item.radix;\r\n                    });\r\n                    this.drawBar();\r\n                })\r\n                .catch(() => {\r\n                    this.listLoading = false;\r\n                });\r\n        },\r\n\r\n        drawBar() {\r\n            let bar = this.$echarts.init(document.getElementById('userBar'));\r\n\r\n            bar.setOption(this.optionBar, (window.onresize = bar.resize));\r\n            bar.resize();\r\n            window.addEventListener('resize', function() {\r\n                bar.resize();\r\n            });\r\n        },\r\n        exportExcel() {\r\n            /* out-table关联导出的dom节点  */\r\n            var wb = XLSX.utils.table_to_book(document.querySelector('#out-table'));\r\n            /* get binary string as output */\r\n            var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' });\r\n            try {\r\n                FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), '个人工时统计.xlsx');\r\n            } catch (e) {\r\n                if (typeof console !== 'undefined') console.log(e, wbout);\r\n            }\r\n            return wbout;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style type=\"text/scss\" scoped lang=\"scss\">\r\n.bar {\r\n    margin-top: 0px;\r\n    width: 100%;\r\n    height: 600px;\r\n    float: left;\r\n}\r\n</style>\n"],"sourceRoot":"src/views/checkwork/hour"}]}