{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\other\\Process.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\other\\Process.vue","mtime":1594003824563},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getProcessPage as _getProcessPage, delProcess } from \"../../api/other/process.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      query: {\n        current: 1,\n        size: 10\n      },\n      listType: '2',\n      dialogVisible: false,\n      pages: 0,\n      total: 0,\n      listLoading: false,\n      list: [],\n      processImageUrl: null\n    };\n  },\n  created: function created() {\n    this.getProcessPage();\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\"])),\n  methods: {\n    getProcessPage: function getProcessPage() {\n      var _this = this;\n\n      this.loading = true;\n\n      _getProcessPage(this.query).then(function (response) {\n        _this.loading = false; //console.log(response.data.data)\n\n        _this.total = response.data.data.total;\n        _this.query.current = response.data.data.current;\n        _this.query.size = response.data.data.size;\n        _this.list = response.data.data.records;\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.size = val;\n      this.getProcessPage();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.current = val;\n      this.getProcessPage();\n    },\n    handleImage: function handleImage(row) {\n      this.dialogVisible = true; //this.processImageUrl = location.host + \"/act/process/resource/\"+row.deploymentId+\"/\"+row.processonDefinitionId+\"/image\"\n\n      this.processImageUrl = \"http://oa.dreamdeck.cn/act/process/resource/\" + row.deploymentId + \"/\" + row.processonDefinitionId + \"/image\";\n    },\n    // 删除\n    handleDel: function handleDel(index, row) {\n      var _this2 = this;\n\n      if (row.id) {\n        this.$confirm(\"确认删除 \" + row.name + \" 吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          delProcess(row.id).then(function (res) {\n            console.log(res);\n\n            _this2.getModelPage();\n          });\n        });\n      }\n    },\n    openList: function openList(val) {\n      if (val == 1) {\n        this.$router.push({\n          path: '/other/act'\n        });\n      }\n    }\n  },\n  mounted: function mounted() {}\n};",null]}