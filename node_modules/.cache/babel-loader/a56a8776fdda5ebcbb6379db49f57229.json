{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\checkwork\\My.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\checkwork\\My.vue","mtime":1596020304163},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPageList, getStatisticsUserId as _getStatisticsUserId, clockMigration } from \"../../api/checkwork/clock.js\";\nimport { dateFormat } from \"../../utils/date.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      query: {\n        selectMonth: dateFormat(new Date()).substr(0, 7),\n        userId: '',\n        current: 1,\n        size: 10\n      },\n      expireTimeOption: {\n        disabledDate: function disabledDate(time) {\n          var date = new Date();\n          var year = date.getFullYear();\n          var month = date.getMonth() + 1;\n\n          if (month >= 1 && month <= 9) {\n            month = '0' + month;\n          }\n\n          var currentdate = year.toString() + month.toString();\n          var timeyear = time.getFullYear();\n          var timemonth = time.getMonth() + 1;\n\n          if (timemonth >= 1 && timemonth <= 9) {\n            timemonth = '0' + timemonth;\n          }\n\n          var timedate = timeyear.toString() + timemonth.toString();\n          return currentdate < timedate;\n        }\n      },\n      pages: 0,\n      total: 0,\n      listLoading: false,\n      list: [],\n      number: '',\n      arr1: [],\n      userStatisticsInfo: {\n        userName: ''\n      }\n    };\n  },\n  created: function created() {\n    this.getClockList();\n    this.query.userId = this.userId;\n    this.getStatisticsUserId();\n  },\n  computed: _objectSpread({}, mapGetters(['permissions', 'userId'])),\n  mounted: function mounted() {},\n  methods: {\n    open: function open() {},\n    setdates: function setdates(arr) {\n      var obj = {},\n          k,\n          arr1 = [];\n\n      for (var i = 0, len = arr.length; i < len; i++) {\n        k = arr[i].day;\n        if (obj[k]) obj[k]++;else obj[k] = 1;\n      } //console.log(obj)\n      //保存结果{el-'元素'，count-出现次数}\n\n\n      for (var o in obj) {\n        for (var _i = 0; _i < obj[o]; _i++) {\n          if (_i === 0) {\n            this.arr1.push(obj[o]);\n          } else {\n            this.arr1.push(0);\n          }\n        }\n      } //console.log(this.arr1);\n\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (columnIndex === 0) {\n        var _row = this.arr1[rowIndex];\n\n        var _col = this.arr1[rowIndex] > 0 ? 1 : 0;\n\n        return [_row, _col];\n      }\n    },\n    getClockList: function getClockList() {\n      var _this = this;\n\n      this.listLoading = true;\n      getPageList(this.query).then(function (response) {\n        console.log(response);\n        _this.listLoading = false;\n        _this.total = response.data.data.total;\n        _this.query.current = response.data.data.current;\n        _this.query.size = response.data.data.size;\n        _this.list = response.data.data.records;\n\n        _this.setdates(_this.list); // 当前减去7天的日期\n\n\n        var time = new Date().setDate(new Date().getDate() - 7);\n        var date = new Date(time);\n        var Y = date.getFullYear() + '-';\n        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n        var time_2 = Y + M + D;\n        var reg = new RegExp('-', 'g');\n\n        _this.list.forEach(function (item) {\n          if (item.status == 2 || item.status == 3 || item.status == 4) {\n            _this.$set(item, 'isShow', false);\n          }\n\n          if (new Date(item.day.replace(reg, '/')) < new Date(time_2.replace(reg, '/'))) {\n            item.isShow = true;\n          }\n        }); // console.log(this.list);\n        // this.getStatisticsUserId();\n\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    getClockMigration: function getClockMigration() {\n      clockMigration().then(function (response) {});\n    },\n    getStatisticsUserId: function getStatisticsUserId() {\n      var _this2 = this;\n\n      _getStatisticsUserId(this.query).then(function (response) {\n        _this2.userStatisticsInfo = response.data.data;\n        console.log(_this2.userStatisticsInfo);\n        var a = _this2.userStatisticsInfo.normalNum == null ? +0 + ' 次' : _this2.userStatisticsInfo.normalNum + ' 次';\n        var b = _this2.userStatisticsInfo.lateNum == null ? +0 + ' 次' : _this2.userStatisticsInfo.lateNum + ' 次';\n        var c = _this2.userStatisticsInfo.earlyNum == null ? +0 + ' 次' : _this2.userStatisticsInfo.earlyNum + ' 次';\n        var d = _this2.userStatisticsInfo.absenteeismNum == null ? +0 + ' 次' : _this2.userStatisticsInfo.absenteeismNum + ' 次';\n        var e = _this2.userStatisticsInfo.businesstripNum == null ? +0 + ' 天' : _this2.userStatisticsInfo.businesstripNum + ' 天';\n        var f = _this2.userStatisticsInfo.leaveNum == null ? +0 + ' 小时' : _this2.userStatisticsInfo.leaveNum + ' 小时';\n        var g = _this2.userStatisticsInfo.gooutNum == null ? +0 + ' 小时' : _this2.userStatisticsInfo.gooutNum + ' 小时';\n        content = ['姓名：' + _this2.userStatisticsInfo.userName, '正常：' + a, '迟到：' + b, '早退：' + c, '旷工：' + d, '出差：' + e, '请假：' + f, '外出：' + g];\n        console.log(content);\n        var content = content;\n        var newDatas = [];\n        var h = _this2.$createElement;\n\n        for (var i in content) {\n          newDatas.push(h('p', null, content[i]));\n        }\n\n        _this2.$alert(h('div', null, newDatas), '当月小计');\n      });\n    },\n    formatType: function formatType(row) {\n      return row.type == 1 ? '上班' : row.type == 2 ? '下班' : '未知';\n    },\n    formatType2: function formatType2(row) {\n      return row.type == 1 ? '' : row.type == 2 ? row.min : '';\n    },\n    // 单独处理时间的函数\n    dealDisabledDate: function dealDisabledDate(time) {\n      return time.getTime() >= Date.now();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.size = val;\n      this.getClockList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.current = val;\n      this.getClockList();\n    },\n    composeValue: function composeValue(item, row) {\n      return {\n        button: item,\n        row: row\n      };\n    },\n    handleCommand: function handleCommand(command) {\n      //this.$message('click on item ' + command);\n      window.localStorage.setItem('applyClockInfo', JSON.stringify(command.row));\n\n      if (command.button == 1) {\n        this.$router.push({\n          path: '/apply/clock/form'\n        });\n      }\n\n      if (command.button == 2) {\n        this.$router.push({\n          path: '/apply/goout/form'\n        });\n      }\n\n      if (command.button == 3) {\n        this.$router.push({\n          path: '/apply/leave/form'\n        });\n      }\n    }\n  }\n};",null]}