{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DDMS\\src\\store\\modules\\app.js","dependencies":[{"path":"D:\\DDMS\\src\\store\\modules\\app.js","mtime":1588235430033},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\n\nvar _mutations;\n\nimport { getStore, setStore } from \"../../utils/store\";\nimport * as types from \"../mutation-types\";\nvar state = {\n  sidebar: {\n    opened: !+getStore(\"sidebarStatus\")\n  },\n  visitedViews: []\n}; // getters\n\nvar getters = {\n  sidebar: function sidebar(state) {\n    return state.sidebar;\n  },\n  visitedViews: function visitedViews(state) {\n    return state.visitedViews;\n  }\n}; // actions\n\nvar actions = {\n  ToggleSideBar: function ToggleSideBar(_ref) {\n    var commit = _ref.commit;\n    commit(types.TOGGLE_SIDEBAR);\n  },\n  ShowSideBar: function ShowSideBar(_ref2) {\n    var commit = _ref2.commit;\n    commit(types.SHOW_SIDEBAR);\n  },\n  addVisitedViews: function addVisitedViews(_ref3, view) {\n    var commit = _ref3.commit;\n    commit(types.ADD_VISITED_VIEWS, view);\n  },\n  delVisitedViews: function delVisitedViews(_ref4, view) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve) {\n      commit(types.DEL_VISITED_VIEWS, view);\n      resolve(_toConsumableArray(state.visitedViews));\n    });\n  }\n}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.TOGGLE_SIDEBAR, function (state) {\n  if (state.sidebar.opened) {\n    setStore(\"sidebarStatus\", 1, 365);\n  } else {\n    setStore(\"sidebarStatus\", 0, 365);\n  }\n\n  state.sidebar.opened = !state.sidebar.opened;\n}), _defineProperty(_mutations, types.SHOW_SIDEBAR, function (state) {\n  if (state.sidebar.opened) {\n    setStore(\"sidebarStatus\", 1, 365);\n  }\n\n  state.sidebar.opened = false;\n}), _defineProperty(_mutations, types.ADD_VISITED_VIEWS, function (state, view) {\n  if (state.visitedViews.some(function (v) {\n    return v.path === view.path;\n  })) return;\n  state.visitedViews.push({\n    name: view.name,\n    path: view.path\n  });\n}), _defineProperty(_mutations, types.DEL_VISITED_VIEWS, function (state, view) {\n  var index;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = state.visitedViews.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          v = _step$value[1];\n\n      if (v.path === view.path) {\n        index = i;\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  state.visitedViews.splice(index, 1);\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",null]}