{"remainingRequest":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DDMS\\src\\utils\\utils.js","dependencies":[{"path":"D:\\DDMS\\src\\utils\\utils.js","mtime":1588235430036},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport * as CryptoJS from \"crypto-js\"; // 表单序列化\n\nexport var serialize = function serialize(data) {\n  var list = [];\n  Object.keys(data).forEach(function (ele) {\n    list.push(\"\".concat(ele, \"=\").concat(data[ele]));\n  });\n  return list.join(\"&\");\n};\n/**\r\n * 生成随机len位数字\r\n */\n\nexport var randomLenNum = function randomLenNum(len, date) {\n  var random = \"\";\n  random = Math.ceil(Math.random() * 100000000000000).toString().substr(0, len || 4);\n  if (date) random = random + Date.now();\n  return random;\n};\n/**\r\n *加密处理\r\n */\n\nexport var encryption = function encryption(params) {\n  var data = params.data,\n      type = params.type,\n      param = params.param,\n      key = params.key;\n  var result = JSON.parse(JSON.stringify(data));\n\n  if (type === \"Base64\") {\n    param.forEach(function (ele) {\n      result[ele] = btoa(result[ele]);\n    });\n  } else {\n    param.forEach(function (ele) {\n      var data = result[ele];\n      key = CryptoJS.enc.Latin1.parse(key);\n      var iv = key; // 加密\n\n      var encrypted = CryptoJS.AES.encrypt(data, key, {\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.ZeroPadding\n      });\n      result[ele] = encrypted.toString();\n    });\n  }\n\n  return result;\n};\nexport function print(content) {\n  var w = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var h = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  // Fixes dual-screen position                         Most browsers      Firefox\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n  w = +w === 0 ? width : w;\n  h = +h === 0 ? height : h;\n  var left = width / 2 - w / 2 + dualScreenLeft;\n  var top = height / 2 - h / 2 + dualScreenTop;\n  var myWindow = window.open(\"\", \"打印\", \"toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=yes, copyhistory=no, width=\" + w + \", height=\" + h + \", top=\" + top + \", left=\" + left);\n  var style = \"<style type='text/css'>\" + \"table.gridtable {font-family: verdana,arial,sans-serif;font-size:11px;color:#333333;border-width: 1px;border-color: #666666;}\" + \"table.gridtable th {border-width: 1px;padding: 1px;border-style: solid;border-color: #666666;background-color: #666666;}\" + \"table.gridtable td {border-width: 1px;padding: 1px;border-style: solid;border-color: #666666;background-color: #ffffff;}\" + \"</style>\";\n  myWindow.document.write(content + style);\n  myWindow.focus();\n  myWindow.document.close(); //关闭document的输出流, 显示选定的数据\n\n  myWindow.print(); //打印当前窗口\n\n  return myWindow;\n}",{"version":3,"sources":["D:/DDMS/src/utils/utils.js"],"names":["CryptoJS","serialize","data","list","Object","keys","forEach","ele","push","join","randomLenNum","len","date","random","Math","ceil","toString","substr","Date","now","encryption","params","type","param","key","result","JSON","parse","stringify","btoa","enc","Latin1","iv","encrypted","AES","encrypt","mode","CBC","padding","pad","ZeroPadding","print","content","w","h","dualScreenLeft","window","screenLeft","undefined","screen","left","dualScreenTop","screenTop","top","width","innerWidth","document","documentElement","clientWidth","height","innerHeight","clientHeight","myWindow","open","style","write","focus","close"],"mappings":"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","sourcesContent":["import * as CryptoJS from \"crypto-js\";\r\n\r\n// 表单序列化\r\nexport const serialize = data => {\r\n    const list = [];\r\n    Object.keys(data).forEach(ele => {\r\n        list.push(`${ele}=${data[ele]}`);\r\n    });\r\n    return list.join(\"&\");\r\n};\r\n\r\n/**\r\n * 生成随机len位数字\r\n */\r\nexport const randomLenNum = (len, date) => {\r\n    let random = \"\";\r\n    random = Math.ceil(Math.random() * 100000000000000)\r\n        .toString()\r\n        .substr(0, len || 4);\r\n    if (date) random = random + Date.now();\r\n    return random;\r\n};\r\n\r\n/**\r\n *加密处理\r\n */\r\nexport const encryption = params => {\r\n    let { data, type, param, key } = params;\r\n    const result = JSON.parse(JSON.stringify(data));\r\n    if (type === \"Base64\") {\r\n        param.forEach(ele => {\r\n            result[ele] = btoa(result[ele]);\r\n        });\r\n    } else {\r\n        param.forEach(ele => {\r\n            var data = result[ele];\r\n            key = CryptoJS.enc.Latin1.parse(key);\r\n            var iv = key;\r\n            // 加密\r\n            var encrypted = CryptoJS.AES.encrypt(data, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC,\r\n                padding: CryptoJS.pad.ZeroPadding\r\n            });\r\n            result[ele] = encrypted.toString();\r\n        });\r\n    }\r\n    return result;\r\n};\r\n\r\nexport function print(content, w = null, h = null) {\r\n    // Fixes dual-screen position                         Most browsers      Firefox\r\n    const dualScreenLeft =\r\n        window.screenLeft !== undefined ? window.screenLeft : screen.left;\r\n    const dualScreenTop =\r\n        window.screenTop !== undefined ? window.screenTop : screen.top;\r\n\r\n    const width = window.innerWidth\r\n        ? window.innerWidth\r\n        : document.documentElement.clientWidth\r\n        ? document.documentElement.clientWidth\r\n        : screen.width;\r\n    const height = window.innerHeight\r\n        ? window.innerHeight\r\n        : document.documentElement.clientHeight\r\n        ? document.documentElement.clientHeight\r\n        : screen.height;\r\n    w = +w === 0 ? width : w;\r\n    h = +h === 0 ? height : h;\r\n    const left = width / 2 - w / 2 + dualScreenLeft;\r\n    const top = height / 2 - h / 2 + dualScreenTop;\r\n    var myWindow = window.open(\r\n        \"\",\r\n        \"打印\",\r\n        \"toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=yes, copyhistory=no, width=\" +\r\n            w +\r\n            \", height=\" +\r\n            h +\r\n            \", top=\" +\r\n            top +\r\n            \", left=\" +\r\n            left\r\n    );\r\n    var style =\r\n        \"<style type='text/css'>\" +\r\n        \"table.gridtable {font-family: verdana,arial,sans-serif;font-size:11px;color:#333333;border-width: 1px;border-color: #666666;}\" +\r\n        \"table.gridtable th {border-width: 1px;padding: 1px;border-style: solid;border-color: #666666;background-color: #666666;}\" +\r\n        \"table.gridtable td {border-width: 1px;padding: 1px;border-style: solid;border-color: #666666;background-color: #ffffff;}\" +\r\n        \"</style>\";\r\n    myWindow.document.write(content + style);\r\n    myWindow.focus();\r\n    myWindow.document.close(); //关闭document的输出流, 显示选定的数据\r\n    myWindow.print(); //打印当前窗口\r\n    return myWindow;\r\n}\r\n"]}]}