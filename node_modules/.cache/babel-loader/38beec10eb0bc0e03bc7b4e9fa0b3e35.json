{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\admin\\Department.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\admin\\Department.vue","mtime":1588235430043},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getTree, addDept, updateDept, deleteDept } from \"../../api/admin/dept.js\";\nimport { getUserList as _getUserList } from \"../../api/admin/user.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      dialogTitle: \"\",\n      listLoading: false,\n      dialogVisible: false,\n      saving: false,\n      list: [],\n      formData: {\n        deptId: \"\",\n        deptName: \"\",\n        userId: \"\",\n        userName: \"\",\n        sort: \"\"\n      },\n      userOptions: [],\n      dept_btn_add: false,\n      dept_btn_edit: false,\n      dept_btn_del: false,\n      number: \"\",\n      width: {\n        type: String,\n        default: \"80%\"\n      },\n      rules: {\n        deptName: [{\n          required: true,\n          message: \"请输入名称\",\n          trigger: \"blur\"\n        }],\n        userId: [{\n          required: true,\n          message: \"请选择负责人\",\n          trigger: \"change\"\n        }],\n        sort: [{\n          required: true,\n          message: \"请输入排序\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getUserList();\n    this.getDepartList();\n    this.dept_btn_add = this.permissions[\"sys_dept_add\"];\n    this.dept_btn_edit = this.permissions[\"sys_dept_edit\"];\n    this.dept_btn_del = this.permissions[\"sys_dept_del\"];\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\"])),\n  methods: {\n    getUserList: function getUserList() {\n      var _this = this;\n\n      _getUserList().then(function (response) {\n        response.data.data.forEach(function (element) {\n          //console.log(element)\n          _this.userOptions.push({\n            value: element.userId,\n            label: element.username\n          });\n        });\n      });\n    },\n    getDepartList: function getDepartList() {\n      var _this2 = this;\n\n      this.loading = true;\n      getTree(null).then(function (response) {\n        _this2.loading = false;\n        _this2.list = response.data.data;\n        _this2.number = _this2.list.length;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    handleModal: function handleModal(data) {\n      if (data) {\n        this.dialogTitle = \"编辑部门 - \" + data.name;\n        this.formData.newData = false;\n        this.formData.deptId = data.id;\n        this.formData.deptName = data.name;\n        this.formData.userId = data.userId;\n        this.formData.userName = data.userName;\n        this.formData.sort = data.sort;\n      } else {\n        this.dialogTitle = \"添加部门\";\n        this.formData.newData = true;\n        this.formData.userId = \"\";\n        this.formData.deptName = \"\";\n        this.formData.userId = \"\";\n        this.formData.userName = \"\";\n        this.formData.sort = \"\";\n      }\n\n      this.dialogVisible = true;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      this.$refs[\"formData\"].validate(function (valid) {\n        if (valid) {\n          _this3.saving = true;\n\n          if (!_this3.formData.newData) {\n            updateDept(_this3.formData).then(function (res) {\n              if (res.data.data) {\n                _this3.dialogVisible = false;\n\n                _this3.getDepartList();\n              }\n            }).finally(function () {\n              _this3.saving = false;\n            });\n          } else {\n            addDept(_this3.formData).then(function (res) {\n              if (res.data.data) {\n                _this3.dialogVisible = false;\n\n                _this3.getDepartList();\n              }\n            }).finally(function () {\n              _this3.saving = false;\n            });\n          }\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(index, row) {\n      var _this4 = this;\n\n      if (row.deptId) {\n        this.$confirm(\"确认删除 \" + row.deptName + \" 吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          deleteDept(row.deptId).then(function (res) {\n            if (res.data.data) {\n              _this4.getDepartList();\n            }\n          });\n        });\n      }\n    }\n  },\n  mounted: function mounted() {}\n};",null]}