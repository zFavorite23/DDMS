{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\other\\Role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\other\\Role.vue","mtime":1588235430072},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPageList, addRole, updateRole, deleteRole, permissionUpd, fetchRoleTree } from \"../../api/other/role.js\";\nimport { fetchMenuTree } from \"../../api/other/menu.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    var _this = this;\n\n    return {\n      query: {\n        current: 1,\n        size: 10\n      },\n      pages: 0,\n      total: 0,\n      defaultImg: \"\",\n      deptOptions: [],\n      roleList: [{\n        value: \"1\",\n        label: \"管理员\"\n      }],\n      pickerOptions: {\n        disabledDate: function disabledDate(time) {\n          return _this.dealDisabledDate(time);\n        }\n      },\n      dialogTitle: \"\",\n      listLoading: false,\n      dialogVisible: false,\n      saving: false,\n      list: [],\n      role_btn_add: false,\n      role_btn_edit: false,\n      role_btn_del: false,\n      role_btn_perm: false,\n      formData: {\n        newData: true,\n        roleId: \"\",\n        roleName: \"\",\n        roleCode: \"\",\n        roleDesc: \"\",\n        dsType: 2\n      },\n      treeData: [],\n      checkedKeys: [],\n      checkedDsScope: [],\n      defaultProps: {\n        label: \"name\",\n        value: \"id\"\n      },\n      roleId: undefined,\n      roleCode: undefined,\n      rolesOptions: undefined,\n      dialogPermissionVisible: false,\n      rules: {\n        roleName: [{\n          required: true,\n          message: \"请输入角色名称\",\n          trigger: \"blur\"\n        }],\n        roleCode: [{\n          required: true,\n          message: \"请输入角色标识\",\n          trigger: \"blur\"\n        }],\n        roleDesc: [{\n          required: true,\n          message: \"请输入角色描述\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getRoleList();\n    this.role_btn_add = this.permissions[\"sys_role_add\"];\n    this.role_btn_edit = this.permissions[\"sys_role_edit\"];\n    this.role_btn_del = this.permissions[\"sys_role_del\"];\n    this.role_btn_perm = this.permissions[\"sys_role_perm\"];\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\"])),\n  methods: {\n    getRoleList: function getRoleList() {\n      var _this2 = this;\n\n      this.loading = true;\n      getPageList(this.query).then(function (response) {\n        _this2.loading = false; //console.log(response.data.data.records)\n\n        _this2.total = response.data.data.total;\n        _this2.query.current = response.data.data.current;\n        _this2.query.size = response.data.data.size;\n        _this2.list = response.data.data.records;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    handleModal: function handleModal(data) {\n      if (data) {\n        this.dialogTitle = \"编辑角色 - \" + data.roleName;\n        this.formData.newData = false;\n        this.formData.roleId = data.roleId;\n        this.formData.roleName = data.roleName;\n        this.formData.roleCode = data.roleCode;\n        this.formData.roleDesc = data.roleDesc;\n      } else {\n        this.dialogTitle = \"添加角色\";\n        this.formData.newData = true;\n        this.formData.roleId = \"\";\n        this.formData.roleName = \"\";\n        this.formData.roleCode = \"\";\n        this.formData.roleDesc = \"\";\n      }\n\n      this.dialogVisible = true;\n    },\n    // 单独处理时间的函数\n    dealDisabledDate: function dealDisabledDate(time) {\n      return time.getTime() >= Date.now();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.size = val;\n      this.getRoleList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.current = val;\n      this.getRoleList();\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      this.$refs[\"formData\"].validate(function (valid) {\n        if (valid) {\n          _this3.saving = true;\n\n          if (!_this3.formData.newData) {\n            updateRole(_this3.formData).then(function (res) {\n              if (res.data.data) {\n                _this3.dialogVisible = false;\n\n                _this3.getRoleList();\n              }\n            }).finally(function () {\n              _this3.saving = false;\n            });\n          } else {\n            addRole(_this3.formData).then(function (res) {\n              if (res.data.data) {\n                _this3.dialogVisible = false;\n\n                _this3.getRoleList();\n              }\n            }).finally(function () {\n              _this3.saving = false;\n            });\n          }\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(index, row) {\n      var _this4 = this;\n\n      if (row.roleId) {\n        this.$confirm(\"确认删除 \" + row.roleName + \" 吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          deleteRole(row.roleId).then(function (res) {\n            if (res.data.data) {\n              _this4.getRoleList();\n            }\n          });\n        });\n      }\n    },\n    handlePermission: function handlePermission(index, row) {\n      var _this5 = this;\n\n      if (row.roleId) {\n        fetchRoleTree(row.roleId).then(function (response) {\n          _this5.checkedKeys = response.data.data;\n          return fetchMenuTree();\n        }).then(function (response) {\n          _this5.treeData = response.data.data; //console.log(this.treeData)\n          // 解析出所有的太监节点\n\n          _this5.checkedKeys = _this5.resolveAllEunuchNodeId(_this5.treeData, _this5.checkedKeys, []);\n          _this5.dialogPermissionVisible = true;\n          _this5.roleId = row.roleId;\n          _this5.roleCode = row.roleCode;\n        });\n      }\n    },\n\n    /**\r\n     * 解析出所有的太监节点id\r\n     * @param json 待解析的json串\r\n     * @param idArr 原始节点数组\r\n     * @param temp 临时存放节点id的数组\r\n     * @return 太监节点id数组\r\n     */\n    resolveAllEunuchNodeId: function resolveAllEunuchNodeId(json, idArr, temp) {\n      var _this6 = this;\n\n      var _loop = function _loop(i) {\n        var item = json[i]; // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\n\n        if (item.children && item.children.length !== 0) {\n          _this6.resolveAllEunuchNodeId(item.children, idArr, temp);\n        } else {\n          temp.push(idArr.filter(function (id) {\n            return id === item.id;\n          }));\n        }\n      };\n\n      for (var i = 0; i < json.length; i++) {\n        _loop(i);\n      }\n\n      return temp;\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    getNodeData: function getNodeData(data, done) {\n      done();\n    },\n    cancal: function cancal() {\n      this.dialogPermissionVisible = false;\n    },\n    updatePermession: function updatePermession(roleId) {\n      var _this7 = this;\n\n      this.menuIds = \"\";\n      this.menuIds = this.$refs.menuTree.getCheckedKeys().join(\",\").concat(\",\").concat(this.$refs.menuTree.getHalfCheckedKeys().join(\",\"));\n      permissionUpd(roleId, this.menuIds).then(function () {\n        _this7.dialogPermissionVisible = false; //this.$store.dispatch('GetMenu', false)\n\n        _this7.$notify.success(\"修改成功\");\n      });\n    }\n  },\n  mounted: function mounted() {}\n};",null]}