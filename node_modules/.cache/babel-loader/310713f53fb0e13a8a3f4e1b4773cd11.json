{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DDMS\\src\\utils\\date.js","dependencies":[{"path":"D:\\DDMS\\src\\utils\\date.js","mtime":1592483424907},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport var calcDate = function calcDate(date1, date2) {\n  var date3 = date2 - date1;\n  var days = Math.floor(date3 / (24 * 3600 * 1000));\n  var leave1 = date3 % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数\n\n  var hours = Math.floor(leave1 / (3600 * 1000));\n  var leave2 = leave1 % (3600 * 1000); // 计算小时数后剩余的毫秒数\n\n  var minutes = Math.floor(leave2 / (60 * 1000));\n  var leave3 = leave2 % (60 * 1000); // 计算分钟数后剩余的毫秒数\n\n  var seconds = Math.round(date3 / 1000);\n  return {\n    leave1: leave1,\n    leave2: leave2,\n    leave3: leave3,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n};\n/**\r\n * 日期格式化\r\n */\n\nexport function dateFormat(date) {\n  var format = \"yyyy-MM-dd hh:mm:ss\";\n\n  if (date !== \"Invalid Date\") {\n    var o = {\n      \"M+\": date.getMonth() + 1,\n      // month\n      \"d+\": date.getDate(),\n      // day\n      \"h+\": date.getHours(),\n      // hour\n      \"m+\": date.getMinutes(),\n      // minute\n      \"s+\": date.getSeconds(),\n      // second\n      \"q+\": Math.floor((date.getMonth() + 3) / 3),\n      // quarter\n      S: date.getMilliseconds() // millisecond\n\n    };\n\n    if (/(y+)/.test(format)) {\n      format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n\n    for (var k in o) {\n      if (new RegExp(\"(\" + k + \")\").test(format)) {\n        format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n      }\n    }\n\n    return format;\n  }\n\n  return \"\";\n}\nexport function formatTime(date, fmt) {\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  }\n\n  var o = {\n    \"M+\": date.getMonth() + 1,\n    \"d+\": date.getDate(),\n    \"h+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds()\n  };\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n      var str = o[k] + \"\";\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : \"0\" + str).substr(str.length);\n    }\n  }\n\n  return fmt;\n}\nexport function fun_date(num) {\n  var date1 = new Date(); //今天时间\n\n  var time1 = date1.getFullYear() + \"-\" + (date1.getMonth() + 1) + \"-\" + date1.getDate();\n  console.log(time1);\n  var date2 = new Date(date1);\n  date2.setDate(date1.getDate() + num); //num是正数表示之后的时间，num负数表示之前的时间，0表示今天\n\n  var time2 = date2.getFullYear() + \"-\" + (date2.getMonth() + 1) + \"-\" + date2.getDate();\n  console.log(time2);\n  return time2;\n}",null]}