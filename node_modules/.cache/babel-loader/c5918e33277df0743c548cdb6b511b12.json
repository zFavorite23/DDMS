{"remainingRequest":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\customer\\firstparty\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\customer\\firstparty\\List.vue","mtime":1588235430064},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getFirstPartPage as _getFirstPartPage, addObj, editObj, deleteObj } from \"../../../api/customer/firstparty.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"ItemReceipt\",\n  data: function data() {\n    return {\n      query: {\n        itemId: null,\n        likeKeyWords: \"\",\n        current: 1,\n        size: 10\n      },\n      formData: {\n        newData: true,\n        firstPartyId: null,\n        itemId: null,\n        name: \"\",\n        address: \"\",\n        telephone: \"\",\n        dutyParagraph: \"\",\n        bankName: \"\",\n        bankAccount: \"\"\n      },\n      dialogTitle: \"\",\n      dialogVisible: false,\n      saving: false,\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入公司名称\",\n          trigger: \"blur\"\n        }],\n        address: [{\n          required: true,\n          message: \"请输入公司注册地址\",\n          trigger: \"blur\"\n        }],\n        telephone: [{\n          required: true,\n          message: \"请输入公司电话\",\n          trigger: \"blur\"\n        }],\n        dutyParagraph: [{\n          required: true,\n          message: \"请输入税号\",\n          trigger: \"blur\"\n        }],\n        bankName: [{\n          required: true,\n          message: \"请输入开户行名称\",\n          trigger: \"blur\"\n        }],\n        bankAccount: [{\n          required: true,\n          message: \"请输入开户行账号\",\n          trigger: \"blur\"\n        }]\n      },\n      pages: 0,\n      total: 0,\n      listLoading: false,\n      list: []\n    };\n  },\n  created: function created() {\n    var itemId = this.$route.params.itemId;\n    this.formData.itemId = itemId;\n    this.query.itemId = itemId;\n    this.getFirstPartPage();\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\"])),\n  methods: {\n    getFirstPartPage: function getFirstPartPage() {\n      var _this = this;\n\n      this.listLoading = true;\n\n      _getFirstPartPage(this.query).then(function (response) {\n        _this.listLoading = false;\n        _this.total = response.data.data.total;\n        _this.query.current = response.data.data.current;\n        _this.query.size = response.data.data.size;\n        _this.list = response.data.data.records;\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.size = val;\n      this.getFirstPartPage();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.current = val;\n      this.getFirstPartPage();\n    },\n    handleModal: function handleModal(data) {\n      if (data) {\n        this.dialogTitle = \"编辑公司 - \" + data.name;\n        this.formData.newData = false;\n        this.formData.firstPartyId = data.firstPartyId;\n        this.formData.name = data.name;\n        this.formData.address = data.address;\n        this.formData.telephone = data.telephone;\n        this.formData.dutyParagraph = data.dutyParagraph;\n        this.formData.bankName = data.bankName;\n        this.formData.bankAccount = data.bankAccount;\n      } else {\n        this.dialogTitle = \"添加公司\";\n        this.formData.newData = true;\n        this.formData.firstPartyId = \"\";\n        this.formData.name = \"\";\n        this.formData.address = \"\";\n        this.formData.telephone = \"\";\n        this.formData.dutyParagraph = \"\";\n        this.formData.bankName = \"\";\n        this.formData.bankAccount = \"\";\n      }\n\n      this.dialogVisible = true;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      this.$refs[\"formData\"].validate(function (valid) {\n        if (valid) {\n          _this2.saving = true;\n\n          if (!_this2.formData.newData) {\n            console.log(_this2.formData);\n            editObj(_this2.formData).then(function (res) {\n              if (res.data.data) {\n                _this2.dialogVisible = false;\n\n                _this2.getFirstPartPage();\n              }\n            }).finally(function () {\n              _this2.saving = false;\n            });\n          } else {\n            addObj(_this2.formData).then(function (res) {\n              if (res.data.data) {\n                _this2.dialogVisible = false;\n\n                _this2.getFirstPartPage();\n              }\n            }).finally(function () {\n              _this2.saving = false;\n            });\n          }\n        }\n      });\n    },\n    handleDel: function handleDel(index, row) {\n      var _this3 = this;\n\n      if (row.companyId) {\n        this.$confirm(\"确认删除吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          deleteObj(row.companyId).then(function (res) {\n            if (res.data.data) {\n              _this3.getFirstPartPage();\n            }\n          });\n        });\n      }\n    }\n  }\n};",null]}