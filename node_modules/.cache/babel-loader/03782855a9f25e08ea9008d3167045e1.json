{"remainingRequest":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js!D:\\DDMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DDMS\\src\\store\\modules\\admin.js","dependencies":[{"path":"D:\\DDMS\\src\\store\\modules\\admin.js","mtime":1588235430033},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\DDMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations;\n\nimport { userInfo as _userInfo, loginName as _loginName, logout } from \"../../api/auth/login\";\nimport { getMenuList } from \"../../api/admin/user\";\nimport * as types from \"../mutation-types\";\nimport { encryption } from \"../../utils/utils\";\nimport { constantRouterMap } from \"../../router\";\nimport { getToken, setToken, removeToken, getUserId, setUserId, removeUserId } from \"../../utils/auth\"; // import { $NOT_NETWORK } from '../../utils/errorCode'\n\nimport { Message } from \"element-ui\"; // initial state\n\nvar state = {\n  userId: getUserId(),\n  // id\n  deptId: \"\",\n  // id\n  companyId: null,\n  // id\n  userName: \"\",\n  // 昵称\n  avatar: \"\",\n  // 头像\n  token: getToken(),\n  // 登录token\n  authRules: [],\n  // 权限列表\n  permissions: [],\n  // 权限列表\n  routers: constantRouterMap // 路由列表\n\n}; // getters\n\nvar getters = {\n  userId: function userId(state) {\n    return state.userId;\n  },\n  deptId: function deptId(state) {\n    return state.deptId;\n  },\n  companyId: function companyId(state) {\n    return state.companyId;\n  },\n  userName: function userName(state) {\n    return state.userName;\n  },\n  avatar: function avatar(state) {\n    return state.avatar;\n  },\n  token: function token(state) {\n    return state.token;\n  },\n  authRules: function authRules(state) {\n    return state.authRules;\n  },\n  permissions: function permissions(state) {\n    return state.permissions;\n  },\n  routers: function routers(state) {\n    return state.routers;\n  }\n}; // actions\n\nvar actions = {\n  // 用户名登录\n  loginName: function loginName(_ref, userInfo) {\n    var commit = _ref.commit;\n    var user = encryption({\n      data: userInfo,\n      key: \"dddddddddddddddd\",\n      param: [\"password\"]\n    }); // const userName = userInfo.userName ? userInfo.userName.trim() : \"\";\n    // const pwd = userInfo.pwd ? userInfo.pwd : \"\";\n\n    return new Promise(function (resolve, reject) {\n      _loginName(user.username, user.password, user.code, user.randomStr).then(function (response) {\n        var data = response.data || {};\n        commit(types.RECEIVE_USER_ID, data.user_id);\n        commit(types.RECEIVE_ADMIN_TOKEN, data.access_token);\n        commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  userInfo: function userInfo(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      _userInfo().then(function (response) {\n        // if (response.code === 2) {\n        //     reject(\"登录失效\");\n        // }\n        var data = response.data || {};\n        commit(types.RECEIVE_ADMIN_COMPANY, data.data.sysUser.companyId);\n        commit(types.RECEIVE_ADMIN_DEPT, data.data.sysUser.deptId);\n        commit(types.RECEIVE_ADMIN_NAME, data.data.sysUser.username);\n        commit(types.RECEIVE_ADMIN_AVATAR, data.data.sysUser.avatar);\n        commit(types.RECEIVE_ADMIN_AUTH_RULES, data.data.roles);\n        commit(types.RECEIVE_ADMIN_PERMISSIONS, data.data.permissions);\n        resolve(data.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 登出\n  loginOut: function loginOut(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      logout().then(function () {\n        commit(types.RECEIVE_USER_ID, \"\");\n        commit(types.RECEIVE_ADMIN_TOKEN, \"\");\n        commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 前端 登出\n  fedLogout: function fedLogout(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit(types.RECEIVE_USER_ID, \"\");\n      commit(types.RECEIVE_ADMIN_TOKEN, \"\");\n      commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\n      resolve();\n    });\n  },\n\n  /**\r\n   * 过滤路由列表\r\n   * @param commit\r\n   * @param data\r\n   * @returns {Promise}\r\n   */\n  filterRouter: function filterRouter(_ref5) {\n    var commit = _ref5.commit;\n    //console.info(data)\n    return new Promise(function (resolve) {\n      getMenuList().then(function (response) {\n        var accessedRouters = response.data.data;\n\n        if (accessedRouters && accessedRouters.length > 0) {\n          commit(types.RECEIVE_ROUTERS, accessedRouters);\n          resolve(accessedRouters);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      }); // console.log(data)\n      // const { accessedRouters } = data;\n      // console.log(accessedRouters)\n      // if (accessedRouters && accessedRouters.length > 0) {\n      //     commit(types.RECEIVE_ROUTERS, accessedRouters);\n      // }\n    });\n  }\n}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.RECEIVE_USER_ID, function (state, userId) {\n  state.userId = userId;\n\n  if (userId === \"\") {\n    removeUserId();\n  } else {\n    setUserId(userId);\n  }\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_TOKEN, function (state, token) {\n  state.token = token;\n\n  if (token === \"\") {\n    removeToken();\n  } else {\n    setToken(token);\n  }\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_DEPT, function (state, deptId) {\n  state.deptId = deptId;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_COMPANY, function (state, companyId) {\n  state.companyId = companyId;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_NAME, function (state, userName) {\n  state.userName = userName;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_AVATAR, function (state, avatar) {\n  state.avatar = avatar;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_AUTH_RULES, function (state, authRules) {\n  state.authRules = authRules;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_PERMISSIONS, function (state, permissions) {\n  var list = {};\n\n  for (var i = 0; i < permissions.length; i++) {\n    list[permissions[i]] = true;\n  }\n\n  state.permissions = list;\n}), _defineProperty(_mutations, types.RECEIVE_ROUTERS, function (state, routers) {\n  var tempRm = constantRouterMap.concat(routers);\n  state.routers = JSON.parse(JSON.stringify(tempRm)); //console.log(state.routers)\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["D:/DDMS/src/store/modules/admin.js"],"names":["userInfo","loginName","logout","getMenuList","types","encryption","constantRouterMap","getToken","setToken","removeToken","getUserId","setUserId","removeUserId","Message","state","userId","deptId","companyId","userName","avatar","token","authRules","permissions","routers","getters","actions","commit","user","data","key","param","Promise","resolve","reject","username","password","code","randomStr","then","response","RECEIVE_USER_ID","user_id","RECEIVE_ADMIN_TOKEN","access_token","RECEIVE_ADMIN_AUTH_RULES","catch","error","RECEIVE_ADMIN_COMPANY","sysUser","RECEIVE_ADMIN_DEPT","RECEIVE_ADMIN_NAME","RECEIVE_ADMIN_AVATAR","roles","RECEIVE_ADMIN_PERMISSIONS","loginOut","fedLogout","filterRouter","accessedRouters","length","RECEIVE_ROUTERS","console","log","mutations","list","i","tempRm","concat","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import { userInfo, loginName, logout } from \"../../api/auth/login\";\r\nimport { getMenuList } from \"../../api/admin/user\";\r\nimport * as types from \"../mutation-types\";\r\nimport { encryption } from \"../../utils/utils\";\r\nimport { constantRouterMap } from \"../../router\";\r\nimport {\r\n    getToken,\r\n    setToken,\r\n    removeToken,\r\n    getUserId,\r\n    setUserId,\r\n    removeUserId\r\n} from \"../../utils/auth\";\r\n// import { $NOT_NETWORK } from '../../utils/errorCode'\r\nimport { Message } from \"element-ui\";\r\n\r\n// initial state\r\nconst state = {\r\n    userId: getUserId(), // id\r\n    deptId: \"\", // id\r\n    companyId: null, // id\r\n    userName: \"\", // 昵称\r\n    avatar: \"\", // 头像\r\n    token: getToken(), // 登录token\r\n    authRules: [], // 权限列表\r\n    permissions: [], // 权限列表\r\n    routers: constantRouterMap // 路由列表\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n    userId: state => state.userId,\r\n    deptId: state => state.deptId,\r\n    companyId: state => state.companyId,\r\n    userName: state => state.userName,\r\n    avatar: state => state.avatar,\r\n    token: state => state.token,\r\n    authRules: state => state.authRules,\r\n    permissions: state => state.permissions,\r\n    routers: state => state.routers\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n    // 用户名登录\r\n    loginName({ commit }, userInfo) {\r\n        const user = encryption({\r\n            data: userInfo,\r\n            key: \"dddddddddddddddd\",\r\n            param: [\"password\"]\r\n        });\r\n        // const userName = userInfo.userName ? userInfo.userName.trim() : \"\";\r\n        // const pwd = userInfo.pwd ? userInfo.pwd : \"\";\r\n        return new Promise((resolve, reject) => {\r\n            loginName(user.username, user.password, user.code, user.randomStr)\r\n                .then(response => {\r\n                    const data = response.data || {};\r\n                    commit(types.RECEIVE_USER_ID, data.user_id);\r\n                    commit(types.RECEIVE_ADMIN_TOKEN, data.access_token);\r\n                    commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\r\n                    resolve(response);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n    userInfo({ commit }) {\r\n        return new Promise((resolve, reject) => {\r\n            userInfo()\r\n                .then(response => {\r\n                    // if (response.code === 2) {\r\n                    //     reject(\"登录失效\");\r\n                    // }\r\n                    const data = response.data || {};\r\n\r\n                    commit(\r\n                        types.RECEIVE_ADMIN_COMPANY,\r\n                        data.data.sysUser.companyId\r\n                    );\r\n                    commit(types.RECEIVE_ADMIN_DEPT, data.data.sysUser.deptId);\r\n                    commit(\r\n                        types.RECEIVE_ADMIN_NAME,\r\n                        data.data.sysUser.username\r\n                    );\r\n                    commit(\r\n                        types.RECEIVE_ADMIN_AVATAR,\r\n                        data.data.sysUser.avatar\r\n                    );\r\n                    commit(types.RECEIVE_ADMIN_AUTH_RULES, data.data.roles);\r\n                    commit(\r\n                        types.RECEIVE_ADMIN_PERMISSIONS,\r\n                        data.data.permissions\r\n                    );\r\n                    resolve(data.data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n    // 登出\r\n    loginOut({ commit }) {\r\n        return new Promise((resolve, reject) => {\r\n            logout()\r\n                .then(() => {\r\n                    commit(types.RECEIVE_USER_ID, \"\");\r\n                    commit(types.RECEIVE_ADMIN_TOKEN, \"\");\r\n                    commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\r\n                    resolve();\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n\r\n    // 前端 登出\r\n    fedLogout({ commit }) {\r\n        return new Promise(resolve => {\r\n            commit(types.RECEIVE_USER_ID, \"\");\r\n            commit(types.RECEIVE_ADMIN_TOKEN, \"\");\r\n            commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\r\n            resolve();\r\n        });\r\n    },\r\n    /**\r\n     * 过滤路由列表\r\n     * @param commit\r\n     * @param data\r\n     * @returns {Promise}\r\n     */\r\n    filterRouter({ commit }) {\r\n        //console.info(data)\r\n        return new Promise(resolve => {\r\n            getMenuList()\r\n                .then(response => {\r\n                    const accessedRouters = response.data.data;\r\n                    if (accessedRouters && accessedRouters.length > 0) {\r\n                        commit(types.RECEIVE_ROUTERS, accessedRouters);\r\n                        resolve(accessedRouters);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n            // console.log(data)\r\n            // const { accessedRouters } = data;\r\n            // console.log(accessedRouters)\r\n            // if (accessedRouters && accessedRouters.length > 0) {\r\n            //     commit(types.RECEIVE_ROUTERS, accessedRouters);\r\n            // }\r\n        });\r\n    }\r\n};\r\n\r\n// mutations\r\nconst mutations = {\r\n    [types.RECEIVE_USER_ID](state, userId) {\r\n        state.userId = userId;\r\n        if (userId === \"\") {\r\n            removeUserId();\r\n        } else {\r\n            setUserId(userId);\r\n        }\r\n    },\r\n    [types.RECEIVE_ADMIN_TOKEN](state, token) {\r\n        state.token = token;\r\n        if (token === \"\") {\r\n            removeToken();\r\n        } else {\r\n            setToken(token);\r\n        }\r\n    },\r\n    [types.RECEIVE_ADMIN_DEPT](state, deptId) {\r\n        state.deptId = deptId;\r\n    },\r\n    [types.RECEIVE_ADMIN_COMPANY](state, companyId) {\r\n        state.companyId = companyId;\r\n    },\r\n    [types.RECEIVE_ADMIN_NAME](state, userName) {\r\n        state.userName = userName;\r\n    },\r\n    [types.RECEIVE_ADMIN_AVATAR](state, avatar) {\r\n        state.avatar = avatar;\r\n    },\r\n    [types.RECEIVE_ADMIN_AUTH_RULES](state, authRules) {\r\n        state.authRules = authRules;\r\n    },\r\n    [types.RECEIVE_ADMIN_PERMISSIONS](state, permissions) {\r\n        const list = {};\r\n        for (let i = 0; i < permissions.length; i++) {\r\n            list[permissions[i]] = true;\r\n        }\r\n        state.permissions = list;\r\n    },\r\n    [types.RECEIVE_ROUTERS](state, routers) {\r\n        const tempRm = constantRouterMap.concat(routers);\r\n        state.routers = JSON.parse(JSON.stringify(tempRm));\r\n        //console.log(state.routers)\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};\r\n"]}]}