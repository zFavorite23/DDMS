{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\apply\\goout\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\apply\\goout\\Form.vue","mtime":1597025292088},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { addObj, editObj } from '../../../api/apply/goout.js';\r\nimport { getApplyUserInfo } from '../../../api/admin/user.js';\r\nimport { getItemVosWithUserId } from '../../../api/project/team.js';\r\nimport { getStandardApplyInfoById } from '../../../api/standard/apply.js';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                itemId: null,\r\n                userId: null,\r\n                deptId: null,\r\n                type: 2\r\n            },\r\n            labelPosition: 'right',\r\n            startTime: '',\r\n            endTime: '',\r\n            formData: {\r\n                newData: true,\r\n                gooutId: null,\r\n                itemId: null,\r\n                userId: '',\r\n                day: '',\r\n                isCross: '0',\r\n                start: '',\r\n                end: '',\r\n                time: null,\r\n                reason: '',\r\n                clockList: '',\r\n                approverids: ''\r\n            },\r\n            timeValue: '',\r\n            itemOptions: [\r\n                {\r\n                    value: null,\r\n                    label: '与项目无关'\r\n                }\r\n            ],\r\n            endOptions: {\r\n                start: '07:00',\r\n                step: '00:30',\r\n                end: '23:30',\r\n                minTime: ''\r\n            },\r\n            rules: {\r\n                destinations: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写出差目的地',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                day: [{ required: true, message: '请选择日期', trigger: 'blur' }],\r\n                isCross: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n                start: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写开始时间',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                end: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写回来时间',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                time: [{ required: true, message: '请填写时长', trigger: 'blur' }],\r\n                reason: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写外出事由',\r\n                        trigger: 'blur'\r\n                    }\r\n                ]\r\n            },\r\n            saving: false,\r\n            applyUserList: [],\r\n            pickerOptions1: {\r\n                disabledDate(time) {\r\n                    return time.getTime() < new Date().getTime() - 3600 * 1000 * 24 * 8 || time.getTime() > new Date().getTime() + 3600 * 1000 * 24 * 0;\r\n                }\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getStandardApplyInfo();\r\n        this.getApplyUser(this.userId);\r\n        this.getItemVosWithUserId(this.userId);\r\n        this.formData.userId = this.userId;\r\n        this.query.userId = this.userId;\r\n\r\n        const editGooutInfo = JSON.parse(window.localStorage.getItem('editGooutInfo'));\n        console.log(editGooutInfo)\r\n        if (editGooutInfo) {\r\n            this.formData.newData = false;\r\n            this.formData.gooutId = editGooutInfo.gooutId;\r\n            this.formData.itemId = editGooutInfo.itemId == '' || editGooutInfo.itemId == null || editGooutInfo.itemId == undefined ? null : editGooutInfo.itemId;\r\n            this.formData.day = editGooutInfo.day;\r\n            this.formData.isCross = editGooutInfo.isCross;\n            this.formData.start = editGooutInfo.start;\n            if (this.formData.isCross == 1) {\n                this.formData.end = '';\n                this.endOptions.start = '00:00';\n                this.endOptions.end = '05:30';\n                this.endOptions.minTime = '';\n            } else {\n                this.formData.end = '';\n                this.endOptions.start = '07:00';\n                this.endOptions.end = '23:30';\n                this.endOptions.minTime = this.formData.start;\n            }\r\n            this.formData.end = editGooutInfo.end;\n            this.formData.time = editGooutInfo.time\r\n            this.timeValue = editGooutInfo.time;\n            this.timeValue=`${this.timeValue}小时`\r\n            this.formData.reason = editGooutInfo.reason;\n\r\n        } else {\r\n            this.applyClockInfo = JSON.parse(window.localStorage.getItem('applyClockInfo'));\r\n            if (this.applyClockInfo) {\r\n                this.formData.day = this.applyClockInfo.day;\r\n                if (this.applyClockInfo.type == 1) {\r\n                    this.formData.start = '09:30';\r\n                    this.formData.end = '12:00';\r\n                    this.formData.time = 2.5;\r\n                    this.timeValue = '2.5 小时';\r\n                }\r\n                if (this.applyClockInfo.type == 2) {\r\n                    this.formData.start = '14:00';\r\n                    this.formData.end = '18:30';\r\n                    this.formData.time = 4.5;\r\n                    this.timeValue = '4.5 小时';\r\n                }\r\n\r\n                this.formData.clockList = JSON.stringify(this.applyClockInfo);\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions', 'userId'])\r\n    },\r\n    methods: {\r\n        selectItem(val) {\r\n            if (val == null || val == '') {\r\n                this.query.itemId = null;\r\n                this.formData.itemId = null;\r\n                this.getApplyUser();\r\n            } else {\r\n                this.query.itemId = val;\r\n                this.formData.itemId = val;\r\n                this.getApplyUser();\r\n            }\r\n        },\r\n        getApplyUser() {\r\n            getApplyUserInfo(this.query).then(response => {\r\n                const applyUser = response.data.data;\r\n                this.applyUserList = [];\r\n                this.applyUserList.push({\r\n                    userId: applyUser.userId,\r\n                    username: applyUser.username,\r\n                    avatar: applyUser.avatar\r\n                });\r\n                this.formData.approverids = applyUser.userId;\r\n            });\r\n        },\r\n        getItemVosWithUserId(userId) {\r\n            getItemVosWithUserId(userId).then(response => {\r\n                response.data.data.forEach(element => {\r\n                    this.itemOptions.push({\r\n                        value: element.itemId,\r\n                        label: element.alias\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        backHistory() {\r\n            window.localStorage.removeItem('editGooutInfo');\r\n            window.localStorage.removeItem('applyClockInfo');\r\n            this.formData.newData = true;\r\n            this.formData.gooutId = null;\r\n            this.formData.itemId = null;\r\n            this.formData.start = '';\r\n            this.formData.end = '';\r\n            this.formData.time = '';\r\n            this.timeValue = '';\r\n            this.formData.reason = '';\r\n            this.$router.go(-1);\r\n        },\r\n        onSubmit() {\r\n              console.log(this.formData)\r\n              console.log(this.timeValue)\r\n            this.$refs['formData'].validate(valid => {\r\n                if (valid) {\r\n                    this.saving = true;\r\n                    if (!this.formData.newData) {\r\n                        editObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.backHistory();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    } else {\r\n                        addObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.backHistory();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        selectIsCross(val) {\r\n            if (this.formData.isCross == 1) {\r\n                this.formData.end = '';\r\n                this.endOptions.start = '00:00';\r\n                this.endOptions.end = '05:30';\r\n                this.endOptions.minTime = '';\r\n            } else {\r\n                this.formData.end = '';\r\n                this.endOptions.start = '07:00';\r\n                this.endOptions.end = '23:30';\r\n                this.endOptions.minTime = this.formData.start;\r\n            }\r\n        },\r\n        selectStartTime(val) {\r\n            this.formData.end = '';\r\n            this.formData.time = null;\r\n            this.timeValue = '';\r\n            if (this.formData.isCross == 0) {\r\n                this.endOptions.minTime = val;\r\n            }\r\n        },\r\n        selectEndTime(val) {\r\n            const startHour = this.formData.start.split(':');\r\n            const endHour = this.formData.end.split(':');\r\n            const end = '24:00'.split(':');\r\n            const end1 = '00:00'.split(':');\r\n\r\n            if (this.formData.isCross == 0) {\r\n                const startMin = (24 - parseInt(startHour[0])) * 60 + parseInt(startHour[1]);\r\n                const endMin = (24 - parseInt(endHour[0])) * 60 - parseInt(endHour[1]);\r\n                //console.log(endMin)\r\n                const mins = startMin - endMin;\r\n                // console.log(mins/60)\r\n                // console.log(mins)\r\n                if (startHour[1] == 30) {\r\n                    this.formData.time = mins / 60 - 1;\r\n                    this.timeValue = mins / 60 - 1 + ' 小时';\r\n                } else {\r\n                    this.formData.time = mins / 60;\r\n                    this.timeValue = mins / 60 + ' 小时';\r\n                }\r\n            } else if (this.formData.isCross == 1) {\r\n                const hoursTime1 = (24 - parseInt(startHour[0])) * 60 + parseInt(startHour[1]);\r\n                const hoursTime11 = (24 - parseInt(end[0])) * 60 - parseInt(end[1]);\r\n                const hoursTime111 = (hoursTime1 - hoursTime11) / 60;\r\n\r\n                const hoursTime2 = (24 - parseInt(end1[0])) * 60 + parseInt(end1[1]);\r\n                const hoursTime22 = (24 - parseInt(endHour[0])) * 60 - parseInt(endHour[1]);\r\n                const hoursTime222 = (hoursTime2 - hoursTime22) / 60;\r\n\r\n                if (startHour[1] == 30) {\r\n                    this.formData.time = hoursTime111 - 1 + hoursTime222 ;\r\n                    this.timeValue = hoursTime111 - 1 + hoursTime222 + '小时';\r\n                } else {\r\n                    this.formData.time = hoursTime111 + hoursTime222;\r\n                    this.timeValue = hoursTime111 + hoursTime222 + '小时';\r\n                }\r\n            }\r\n        },\r\n        getStandardApplyInfo() {\r\n            getStandardApplyInfoById(2).then(response => {\n                console.log(response);\r\n                if (response.data.data) {\r\n                    const data = response.data.data;\r\n                    this.content = data.content;\r\n                    const gootStandardApply = JSON.parse(window.localStorage.getItem('gooutStandardApply'));\r\n                    // console.log(gootStandardApply);\r\n                    if (gootStandardApply) {\r\n                        if (gootStandardApply.version < data.version) {\r\n                            this.open();\r\n                        }\r\n                    } else {\r\n                        this.open();\r\n                    }\r\n                    window.localStorage.setItem('gooutStandardApply', JSON.stringify(data));\r\n                }\r\n            });\r\n        },\r\n        open() {\r\n            console.log(this.content);\r\n            let content = this.content.split('\\n\\n');\r\n            let newDatas = [];\r\n            const h = this.$createElement;\r\n            for (let i in content) {\r\n                newDatas.push(h('p', null, content[i]));\r\n            }\r\n            this.$alert(h('div', null, newDatas), '外出规范');\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n",{"version":3,"sources":["Form.vue"],"names":[],"mappingsfile":"Form.vue","sourceRoot":"src/views/apply/goout","sourcesContent":["<template>\r\n    <div>\r\n        <el-form label-position=\"right\" ref=\"formData\" :rules=\"rules\" :model=\"formData\" class=\"form\" :label-position=\"labelPosition\" label-width=\"100px\">\r\n            <el-form-item label=\"项目：\">\r\n                <el-select v-model=\"formData.itemId\" clearable filterable placeholder=\"请选择\" @change=\"selectItem\">\r\n                    <el-option v-for=\"(item, index) in itemOptions\" :value=\"item.value\" :key=\"index\" :label=\"item.label\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n\r\n            <el-row>\r\n                <el-col :md=\"{ span: 8 }\" :xs=\"{ span: 24 }\">\r\n                    <el-form-item label=\"外出日期：\" prop=\"day\">\r\n                        <el-date-picker\r\n                            v-model=\"formData.day\"\r\n                            :picker-options=\"pickerOptions1\"\r\n                            type=\"date\"\r\n                            placeholder=\"选择日期\"\r\n                            format=\"yyyy 年 MM 月 dd 日\"\r\n                            value-format=\"yyyy-MM-dd\"\r\n                        ></el-date-picker>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n            <el-form-item label=\"是否跨天：\" prop=\"isCross\">\r\n                <el-radio-group v-model=\"formData.isCross\" @change=\"selectIsCross\">\r\n                    <el-radio label=\"1\">是</el-radio>\r\n                    <el-radio label=\"0\">否</el-radio>\r\n                </el-radio-group>\r\n            </el-form-item>\r\n            <el-form-item label=\"外出时间：\" required>\r\n                <el-row>\r\n                    <el-col :span=\"11\">\r\n                        <el-form-item prop=\"start\">\r\n                            <el-time-select\r\n                                v-model=\"formData.start\"\r\n                                @change=\"selectStartTime\"\r\n                                placeholder=\"选择开始时间\"\r\n                                :picker-options=\"{\r\n                                    start: '00:30',\r\n                                    step: '00:30',\r\n                                    end: '23:30'\r\n                                }\"\r\n                            ></el-time-select>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col class=\"line\" :span=\"2\">-</el-col>\r\n                    <el-col :span=\"11\">\r\n                        <el-form-item prop=\"end\">\r\n                            <el-time-select v-model=\"formData.end\" @change=\"selectEndTime\" placeholder=\"选择结束时间\" :picker-options=\"endOptions\"></el-time-select>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"外出时长：\" prop=\"time\">\r\n                <el-input v-model=\"timeValue\" placeholder=\"请选择日期\" :disabled=\"true\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"外出事由：\" prop=\"reason\"><el-input type=\"textarea\" v-model=\"formData.reason\" maxlength=\"80\" show-word-limit></el-input></el-form-item>\r\n            <el-form-item label=\"审批人：\">\r\n                <div class=\"apply-user-list\" v-for=\"user in applyUserList\">\r\n                    <el-avatar :size=\"60\" :src=\"user.avatar\"></el-avatar>\r\n                    <span class=\"username\">{{ user.username }}</span>\r\n                </div>\r\n            </el-form-item>\r\n            <el-form-item style=\"text-align: center\" class=\"save\">\r\n                <el-button type=\"primary\" @click=\"onSubmit\" :loading=\"saving\">保存</el-button>\r\n                <el-button @click=\"backHistory\">取消</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        <el-button type=\"primary\" class=\"invoiceRules\" @click=\"open\">外出规范</el-button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { addObj, editObj } from '../../../api/apply/goout.js';\r\nimport { getApplyUserInfo } from '../../../api/admin/user.js';\r\nimport { getItemVosWithUserId } from '../../../api/project/team.js';\r\nimport { getStandardApplyInfoById } from '../../../api/standard/apply.js';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                itemId: null,\r\n                userId: null,\r\n                deptId: null,\r\n                type: 2\r\n            },\r\n            labelPosition: 'right',\r\n            startTime: '',\r\n            endTime: '',\r\n            formData: {\r\n                newData: true,\r\n                gooutId: null,\r\n                itemId: null,\r\n                userId: '',\r\n                day: '',\r\n                isCross: '0',\r\n                start: '',\r\n                end: '',\r\n                time: null,\r\n                reason: '',\r\n                clockList: '',\r\n                approverids: ''\r\n            },\r\n            timeValue: '',\r\n            itemOptions: [\r\n                {\r\n                    value: null,\r\n                    label: '与项目无关'\r\n                }\r\n            ],\r\n            endOptions: {\r\n                start: '07:00',\r\n                step: '00:30',\r\n                end: '23:30',\r\n                minTime: ''\r\n            },\r\n            rules: {\r\n                destinations: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写出差目的地',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                day: [{ required: true, message: '请选择日期', trigger: 'blur' }],\r\n                isCross: [{ required: true, message: '请选择', trigger: 'blur' }],\r\n                start: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写开始时间',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                end: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写回来时间',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                time: [{ required: true, message: '请填写时长', trigger: 'blur' }],\r\n                reason: [\r\n                    {\r\n                        required: true,\r\n                        message: '请填写外出事由',\r\n                        trigger: 'blur'\r\n                    }\r\n                ]\r\n            },\r\n            saving: false,\r\n            applyUserList: [],\r\n            pickerOptions1: {\r\n                disabledDate(time) {\r\n                    return time.getTime() < new Date().getTime() - 3600 * 1000 * 24 * 8 || time.getTime() > new Date().getTime() + 3600 * 1000 * 24 * 0;\r\n                }\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getStandardApplyInfo();\r\n        this.getApplyUser(this.userId);\r\n        this.getItemVosWithUserId(this.userId);\r\n        this.formData.userId = this.userId;\r\n        this.query.userId = this.userId;\r\n\r\n        const editGooutInfo = JSON.parse(window.localStorage.getItem('editGooutInfo'));\n        console.log(editGooutInfo)\r\n        if (editGooutInfo) {\r\n            this.formData.newData = false;\r\n            this.formData.gooutId = editGooutInfo.gooutId;\r\n            this.formData.itemId = editGooutInfo.itemId == '' || editGooutInfo.itemId == null || editGooutInfo.itemId == undefined ? null : editGooutInfo.itemId;\r\n            this.formData.day = editGooutInfo.day;\r\n            this.formData.isCross = editGooutInfo.isCross;\n            this.formData.start = editGooutInfo.start;\n            if (this.formData.isCross == 1) {\n                this.formData.end = '';\n                this.endOptions.start = '00:00';\n                this.endOptions.end = '05:30';\n                this.endOptions.minTime = '';\n            } else {\n                this.formData.end = '';\n                this.endOptions.start = '07:00';\n                this.endOptions.end = '23:30';\n                this.endOptions.minTime = this.formData.start;\n            }\r\n            this.formData.end = editGooutInfo.end;\n            this.formData.time = editGooutInfo.time\r\n            this.timeValue = editGooutInfo.time;\n            this.timeValue=`${this.timeValue}小时`\r\n            this.formData.reason = editGooutInfo.reason;\n\r\n        } else {\r\n            this.applyClockInfo = JSON.parse(window.localStorage.getItem('applyClockInfo'));\r\n            if (this.applyClockInfo) {\r\n                this.formData.day = this.applyClockInfo.day;\r\n                if (this.applyClockInfo.type == 1) {\r\n                    this.formData.start = '09:30';\r\n                    this.formData.end = '12:00';\r\n                    this.formData.time = 2.5;\r\n                    this.timeValue = '2.5 小时';\r\n                }\r\n                if (this.applyClockInfo.type == 2) {\r\n                    this.formData.start = '14:00';\r\n                    this.formData.end = '18:30';\r\n                    this.formData.time = 4.5;\r\n                    this.timeValue = '4.5 小时';\r\n                }\r\n\r\n                this.formData.clockList = JSON.stringify(this.applyClockInfo);\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions', 'userId'])\r\n    },\r\n    methods: {\r\n        selectItem(val) {\r\n            if (val == null || val == '') {\r\n                this.query.itemId = null;\r\n                this.formData.itemId = null;\r\n                this.getApplyUser();\r\n            } else {\r\n                this.query.itemId = val;\r\n                this.formData.itemId = val;\r\n                this.getApplyUser();\r\n            }\r\n        },\r\n        getApplyUser() {\r\n            getApplyUserInfo(this.query).then(response => {\r\n                const applyUser = response.data.data;\r\n                this.applyUserList = [];\r\n                this.applyUserList.push({\r\n                    userId: applyUser.userId,\r\n                    username: applyUser.username,\r\n                    avatar: applyUser.avatar\r\n                });\r\n                this.formData.approverids = applyUser.userId;\r\n            });\r\n        },\r\n        getItemVosWithUserId(userId) {\r\n            getItemVosWithUserId(userId).then(response => {\r\n                response.data.data.forEach(element => {\r\n                    this.itemOptions.push({\r\n                        value: element.itemId,\r\n                        label: element.alias\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        backHistory() {\r\n            window.localStorage.removeItem('editGooutInfo');\r\n            window.localStorage.removeItem('applyClockInfo');\r\n            this.formData.newData = true;\r\n            this.formData.gooutId = null;\r\n            this.formData.itemId = null;\r\n            this.formData.start = '';\r\n            this.formData.end = '';\r\n            this.formData.time = '';\r\n            this.timeValue = '';\r\n            this.formData.reason = '';\r\n            this.$router.go(-1);\r\n        },\r\n        onSubmit() {\r\n              console.log(this.formData)\r\n              console.log(this.timeValue)\r\n            this.$refs['formData'].validate(valid => {\r\n                if (valid) {\r\n                    this.saving = true;\r\n                    if (!this.formData.newData) {\r\n                        editObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.backHistory();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    } else {\r\n                        addObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.backHistory();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        selectIsCross(val) {\r\n            if (this.formData.isCross == 1) {\r\n                this.formData.end = '';\r\n                this.endOptions.start = '00:00';\r\n                this.endOptions.end = '05:30';\r\n                this.endOptions.minTime = '';\r\n            } else {\r\n                this.formData.end = '';\r\n                this.endOptions.start = '07:00';\r\n                this.endOptions.end = '23:30';\r\n                this.endOptions.minTime = this.formData.start;\r\n            }\r\n        },\r\n        selectStartTime(val) {\r\n            this.formData.end = '';\r\n            this.formData.time = null;\r\n            this.timeValue = '';\r\n            if (this.formData.isCross == 0) {\r\n                this.endOptions.minTime = val;\r\n            }\r\n        },\r\n        selectEndTime(val) {\r\n            const startHour = this.formData.start.split(':');\r\n            const endHour = this.formData.end.split(':');\r\n            const end = '24:00'.split(':');\r\n            const end1 = '00:00'.split(':');\r\n\r\n            if (this.formData.isCross == 0) {\r\n                const startMin = (24 - parseInt(startHour[0])) * 60 + parseInt(startHour[1]);\r\n                const endMin = (24 - parseInt(endHour[0])) * 60 - parseInt(endHour[1]);\r\n                //console.log(endMin)\r\n                const mins = startMin - endMin;\r\n                // console.log(mins/60)\r\n                // console.log(mins)\r\n                if (startHour[1] == 30) {\r\n                    this.formData.time = mins / 60 - 1;\r\n                    this.timeValue = mins / 60 - 1 + ' 小时';\r\n                } else {\r\n                    this.formData.time = mins / 60;\r\n                    this.timeValue = mins / 60 + ' 小时';\r\n                }\r\n            } else if (this.formData.isCross == 1) {\r\n                const hoursTime1 = (24 - parseInt(startHour[0])) * 60 + parseInt(startHour[1]);\r\n                const hoursTime11 = (24 - parseInt(end[0])) * 60 - parseInt(end[1]);\r\n                const hoursTime111 = (hoursTime1 - hoursTime11) / 60;\r\n\r\n                const hoursTime2 = (24 - parseInt(end1[0])) * 60 + parseInt(end1[1]);\r\n                const hoursTime22 = (24 - parseInt(endHour[0])) * 60 - parseInt(endHour[1]);\r\n                const hoursTime222 = (hoursTime2 - hoursTime22) / 60;\r\n\r\n                if (startHour[1] == 30) {\r\n                    this.formData.time = hoursTime111 - 1 + hoursTime222 ;\r\n                    this.timeValue = hoursTime111 - 1 + hoursTime222 + '小时';\r\n                } else {\r\n                    this.formData.time = hoursTime111 + hoursTime222;\r\n                    this.timeValue = hoursTime111 + hoursTime222 + '小时';\r\n                }\r\n            }\r\n        },\r\n        getStandardApplyInfo() {\r\n            getStandardApplyInfoById(2).then(response => {\n                console.log(response);\r\n                if (response.data.data) {\r\n                    const data = response.data.data;\r\n                    this.content = data.content;\r\n                    const gootStandardApply = JSON.parse(window.localStorage.getItem('gooutStandardApply'));\r\n                    // console.log(gootStandardApply);\r\n                    if (gootStandardApply) {\r\n                        if (gootStandardApply.version < data.version) {\r\n                            this.open();\r\n                        }\r\n                    } else {\r\n                        this.open();\r\n                    }\r\n                    window.localStorage.setItem('gooutStandardApply', JSON.stringify(data));\r\n                }\r\n            });\r\n        },\r\n        open() {\r\n            console.log(this.content);\r\n            let content = this.content.split('\\n\\n');\r\n            let newDatas = [];\r\n            const h = this.$createElement;\r\n            for (let i in content) {\r\n                newDatas.push(h('p', null, content[i]));\r\n            }\r\n            this.$alert(h('div', null, newDatas), '外出规范');\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n</script>\r\n<style type=\"text/scss\" scoped lang=\"scss\"></style>\r\n"]}]}