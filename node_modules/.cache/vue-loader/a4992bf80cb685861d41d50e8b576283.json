{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\components\\File\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\components\\File\\Upload.vue","mtime":1588235430027},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { qiuNiuUpToken, createFile } from \"../../api/file/upload\";\r\nimport { renderSize } from \"../../filtres/index\";\r\n\r\nexport default {\r\n    name: \"Upload\",\r\n    props: {\r\n        height: {\r\n            type: Number\r\n        },\r\n        width: {\r\n            type: Number\r\n        },\r\n        ext: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: Number\r\n        },\r\n        color: {\r\n            type: String,\r\n            default: \"#1890ff\"\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            activeName: \"localhost\",\r\n            file: null,\r\n            fileName: \"\",\r\n            filePath: \"\",\r\n            filePathUrl: \"\",\r\n            fileUrl: \"\",\r\n            dialogVisible: false,\r\n            uploadLoading: false\r\n        };\r\n    },\r\n    methods: {\r\n        onDrag(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        },\r\n        onDrop(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            const data = e.dataTransfer.files;\r\n            // 获取文件对象\r\n            if (data.length < 1) {\r\n                return false; // 检测是否有文件拖拽到页面\r\n            }\r\n            this.file = data[0];\r\n            this.fileName = data[0].name;\r\n        },\r\n        onChange(e) {\r\n            const data = e.target.files;\r\n            // 获取文件对象\r\n            if (data.length < 1) {\r\n                return false; // 检测是否有文件拖拽到页面\r\n            }\r\n            this.file = data[0];\r\n            this.fileName = data[0].name;\r\n            e.target.value = \"\";\r\n        },\r\n        onReset() {\r\n            this.activeName = \"localhost\";\r\n            this.file = null;\r\n            this.fileName = \"\";\r\n            this.filePath = \"\";\r\n            this.filePathUrl = \"\";\r\n            this.fileUrl = \"\";\r\n            this.dialogVisible = false;\r\n            this.uploadLoading = false;\r\n        },\r\n        handleSubmit() {\r\n            if (this.activeName === \"network\") {\r\n                if (!this.fileUrl) {\r\n                    this.$message.error(\"请输入文件网络地址\");\r\n                    return;\r\n                }\r\n                this.$emit(\"on-select\", this.fileUrl, this.fileUrl);\r\n                this.onReset();\r\n                return;\r\n            }\r\n            if (this.file === null) {\r\n                this.$message.error(\"请先选择文件\");\r\n                return;\r\n            }\r\n            // 检查文件\r\n            let isVerify = this.beforeUpload(this.file);\r\n            if (isVerify === false) {\r\n                return;\r\n            }\r\n            isVerify\r\n                .then(() => {\r\n                    this.uploadLoading = true;\r\n                    qiuNiuUpToken()\r\n                        .then(response => {\r\n                            if (response.code > 0) {\r\n                                this.$message.error(\"出现未知问题，刷新页面\");\r\n                                return;\r\n                            }\r\n                            const url = response.data.upload_url;\r\n                            const formData = new FormData();\r\n                            formData.append(\"token\", response.data.up_token);\r\n                            formData.append(\"file\", this.file);\r\n                            createFile(url, formData)\r\n                                .then(response => {\r\n                                    this.uploadLoading = false;\r\n                                    if (response.key || response.data.key) {\r\n                                        const filePath =\r\n                                            response.key || response.data.key;\r\n                                        let _URL =\r\n                                            window.URL || window.webkitURL;\r\n                                        const filePathUrl = _URL.createObjectURL(\r\n                                            this.file\r\n                                        );\r\n                                        this.$emit(\r\n                                            \"on-select\",\r\n                                            filePath,\r\n                                            filePathUrl\r\n                                        );\r\n                                        this.onReset();\r\n                                        return;\r\n                                    }\r\n                                    this.$message.error(\"上传出错\");\r\n                                })\r\n                                .catch(() => {\r\n                                    this.uploadLoading = false;\r\n                                    this.$message.error(\"上传出错\");\r\n                                });\r\n                        })\r\n                        .catch(() => {\r\n                            this.uploadLoading = false;\r\n                            this.$message.error(\"出现未知问题，刷新页面\");\r\n                        });\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        beforeUpload(file) {\r\n            const name = file.name ? file.name : \"\";\r\n            let ext = name\r\n                ? name.substr(name.lastIndexOf(\".\") + 1, name.length)\r\n                : true;\r\n            // 转成小写\r\n            ext = ext.toLowerCase();\r\n            let isExt = false;\r\n            // 如果有坚持文件后缀的配置\r\n            if (this.ext) {\r\n                isExt = this.ext.indexOf(ext) >= 0;\r\n                if (!isExt) {\r\n                    this.$message.error(\"文件只能为 \" + this.ext + \" 格式!\");\r\n                    return false;\r\n                }\r\n            }\r\n            let isSize = false;\r\n            if (this.size) {\r\n                let sizeStr = this.size;\r\n                isSize = sizeStr > 0 && file.size > sizeStr;\r\n                if (isSize) {\r\n                    this.$message.error(\r\n                        \"上传文件不能超过 \" + renderSize(sizeStr) + \"!\"\r\n                    );\r\n                    return false;\r\n                }\r\n            }\r\n            const _this = this;\r\n            if (_this.width || _this.height) {\r\n                return new Promise(function(resolve, reject) {\r\n                    let width = _this.width;\r\n                    let height = _this.height;\r\n                    let _URL = window.URL || window.webkitURL;\r\n                    let img = new Image();\r\n                    img.src = _URL.createObjectURL(file);\r\n                    img.onload = function() {\r\n                        let valid =\r\n                            (!width || img.width === width) &&\r\n                            (!height || img.height === height);\r\n                        if (valid) {\r\n                            resolve();\r\n                        } else {\r\n                            let messageStr = \"\";\r\n                            if (width && !height) {\r\n                                messageStr = width;\r\n                            }\r\n                            if (height && !width) {\r\n                                messageStr = height;\r\n                            }\r\n                            if (height && width) {\r\n                                messageStr = width + \"*\" + height;\r\n                            }\r\n                            _this.$message.error(\r\n                                \"上传尺寸必须是 \" + messageStr + \" px!\"\r\n                            );\r\n                            reject();\r\n                        }\r\n                    };\r\n                });\r\n            }\r\n            return new Promise(function(resolve) {\r\n                resolve();\r\n            });\r\n        }\r\n    },\r\n    computed: {},\r\n    watch: {}\r\n};\r\n",null]}