{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\apply\\manhour\\Info.vue?vue&type=template&id=57cef69a&","dependencies":[{"path":"D:\\DDMS\\src\\views\\apply\\manhour\\Info.vue","mtime":1593671597488},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { attrs: { id: \"myCanvas\" } }, [\n        _c(\"span\", { staticClass: \"tit\" }, [\n          _vm._v(\"工时 / 总数 : \" + _vm._s(_vm.total))\n        ])\n      ]),\n      _c(\n        \"el-form\",\n        { attrs: { inline: true, model: _vm.query } },\n        [\n          _c(\n            \"el-form-item\",\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { clearable: \"\", placeholder: \"请选择\" },\n                  model: {\n                    value: _vm.query.status,\n                    callback: function($$v) {\n                      _vm.$set(_vm.query, \"status\", $$v)\n                    },\n                    expression: \"query.status\"\n                  }\n                },\n                _vm._l(_vm.statusOptions, function(item) {\n                  return _c(\"el-option\", {\n                    key: item.value,\n                    attrs: {\n                      label: item.label,\n                      value: item.value,\n                      disabled: item.disabled\n                    }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    size: \"medium\",\n                    icon: \"el-icon-search\"\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.getManhourPage()\n                    }\n                  }\n                },\n                [_vm._v(\"搜索\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\"\n            }\n          ],\n          ref: \"imageTofile\",\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            data: _vm.list,\n            \"span-method\": _vm.objectSpanMethod,\n            stripe: \"\",\n            border: \"\"\n          }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { prop: \"day\", \"min-width\": \"100\", label: \"申请日期\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"自评积分\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", [_vm._v(_vm._s(scope.row.integral) + \" 分\")])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              \"min-width\": \"200\",\n              label: \"项目\",\n              \"show-overflow-tooltip\": true\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.alias == null || scope.row.alias == \"\"\n                      ? _c(\"span\", [_vm._v(\"与项目无关\")])\n                      : _c(\"span\", [_vm._v(_vm._s(scope.row.alias))])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"categoryName\",\n              \"min-width\": \"80\",\n              label: \"工作类别\"\n            }\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              label: \"分类\",\n              \"min-width\": \"130\",\n              \"show-overflow-tooltip\": true\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"p\", [_vm._v(_vm._s(scope.row.mainClassifyName))]),\n                    _c(\"p\", [_vm._v(_vm._s(scope.row.subClassifyName))])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"reason\",\n              \"min-width\": \"150\",\n              label: \"工作内容\",\n              \"show-overflow-tooltip\": true\n            }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { \"min-width\": \"100\", label: \"工时\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", [_vm._v(_vm._s(scope.row.useHour) + \" 小时\")])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"审批工时\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.checkMin != null\n                      ? _c(\"p\", [_vm._v(_vm._s(scope.row.checkMin) + \" 小时\")])\n                      : _c(\"p\", [_vm._v(_vm._s(scope.row.useHour) + \" 小时\")])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { \"min-width\": \"100\", label: \"验收人\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.checkUserList != \"\"\n                      ? _c(\n                          \"span\",\n                          _vm._l(scope.row.checkUserList, function(item) {\n                            return _c(\"div\", { staticClass: \"tag-group\" }, [\n                              _c(\"p\", [_vm._v(_vm._s(item.checkUserName))])\n                            ])\n                          }),\n                          0\n                        )\n                      : _c(\"span\", [_c(\"p\", [_vm._v(\"无人验收\")])])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { \"min-width\": \"120\", label: \"反馈意见\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [_c(\"p\", [_vm._v(_vm._s(scope.row.summary))])]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { \"min-width\": \"180\", label: \"完成进度\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.complete == \"100\"\n                      ? _c(\"el-tag\", { attrs: { type: \"success\" } }, [\n                          _vm._v(\"已完成\")\n                        ])\n                      : _c(\n                          \"div\",\n                          [\n                            _c(\"el-tag\", { attrs: { type: \"warning\" } }, [\n                              _vm._v(\"完成 \" + _vm._s(scope.row.complete) + \"%\")\n                            ]),\n                            _c(\"el-tag\", { attrs: { type: \"warning\" } }, [\n                              _vm._v(\n                                \"预计\" + _vm._s(scope.row.completeTime) + \"完成\"\n                              )\n                            ])\n                          ],\n                          1\n                        )\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"status\", \"min-width\": \"100\", label: \"审批状态\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.status == 0\n                      ? _c(\"el-tag\", { attrs: { type: \"warning\" } }, [\n                          _vm._v(\"审批中\")\n                        ])\n                      : _vm._e(),\n                    scope.row.status == 1 && scope.row.complete == \"100\"\n                      ? _c(\"el-tag\", { attrs: { type: \"success\" } }, [\n                          _vm._v(\"同意\")\n                        ])\n                      : _vm._e(),\n                    scope.row.status == 1 && scope.row.complete != \"100\"\n                      ? _c(\"el-tag\", { attrs: { type: \"warning\" } }, [\n                          _vm._v(\"同意(未完成)\")\n                        ])\n                      : _vm._e(),\n                    scope.row.status == 2\n                      ? _c(\"el-tag\", { attrs: { type: \"danger\" } }, [\n                          _vm._v(\"已拒绝\")\n                        ])\n                      : _vm._e()\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { \"min-width\": \"80\", label: \"删除操作\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    scope.row.status == 0\n                      ? _c(\"el-button\", {\n                          staticClass: \"delete\",\n                          attrs: {\n                            type: \"danger\",\n                            icon: \"el-icon-delete\",\n                            circle: \"\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.handleDel(scope.row)\n                            }\n                          }\n                        })\n                      : _vm._e()\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { \"min-width\": \"80\", label: \"复制操作\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"el-button\", {\n                      staticClass: \"delete\",\n                      attrs: {\n                        type: \"info\",\n                        icon: \"el-icon-document-copy\",\n                        circle: \"\"\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.copyCode(scope.row)\n                        }\n                      }\n                    })\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _c(\"el-pagination\", {\n        staticClass: \"right\",\n        attrs: {\n          \"current-page\": _vm.query.current,\n          \"page-sizes\": [10, 20, 50, 100],\n          \"page-size\": _vm.query.size,\n          layout: \"total, sizes, prev, pager, next\",\n          total: _vm.total\n        },\n        on: {\n          \"size-change\": _vm.handleSizeChange,\n          \"current-change\": _vm.handleCurrentChange\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}