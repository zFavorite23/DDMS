{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\apply\\clock\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\apply\\clock\\Form.vue","mtime":1591786451986},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getApplyUserInfo } from \"../../../api/admin/user.js\";\r\nimport {\r\n    getAbnormalSeven,\r\n    getClockInfo\r\n} from \"../../../api/checkwork/clock.js\";\r\nimport { addObj, editObj } from \"../../../api/apply/clock.js\";\r\nimport { getClockNum } from \"../../../api/checkwork/month.js\";\r\nimport { getStandardApplyInfoById } from \"../../../api/standard/apply.js\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                itemId: null,\r\n                userId: null,\r\n                deptId: null,\r\n                type: 5\r\n            },\r\n            queryClockNum: {\r\n                userId: null,\r\n                month: \"\"\r\n            },\r\n            formData: {\r\n                newData: true,\r\n                userId: \"\",\r\n                day: \"\",\r\n                time: \"\",\r\n                reason: \"\",\r\n                clockList: \"\",\r\n                approverids: \"\"\r\n            },\r\n            dayOptions: [\r\n                // {\r\n                //     lable:\"2020-01-08\",\r\n                //     value:\"2020-01-08\"\r\n                // }\r\n            ],\r\n            saving: false,\r\n            clockNum: 0,\r\n            disabledDay: true,\r\n            rules: {\r\n                day: [\r\n                    {\r\n                        required: true,\r\n                        message: \"请选择未打卡日期\",\r\n                        trigger: \"change\"\r\n                    }\r\n                ],\r\n                time: [\r\n                    {\r\n                        required: true,\r\n                        message: \"请选择未打卡时间\",\r\n                        trigger: \"change\"\r\n                    }\r\n                ],\r\n                reason: [{ required: true, message: \"请填写未打卡事由\" }]\r\n            },\r\n            applyUserList: [],\r\n            applyClockInfo: \"\"\r\n        };\r\n    },\r\n    created() {\r\n        this.getStandardApplyInfo();\r\n        this.getApplyUser(this.userId);\r\n        this.formData.userId = this.userId;\r\n        this.query.userId = this.userId;\r\n        this.queryClockNum.userId = this.userId;\r\n        this.getAbnormalSeven();\r\n\r\n        const editClockInfo = JSON.parse(\r\n            window.localStorage.getItem(\"editClockInfo\")\r\n        );\r\n        if (editClockInfo) {\r\n            this.formData.newData = false;\r\n            this.formData.clockId = editClockInfo.clockId;\r\n            this.formData.day = editClockInfo.day;\r\n            this.formData.time = editClockInfo.time;\r\n            this.formData.reason = editClockInfo.reason;\r\n            this.clockNum = 1;\r\n        } else {\r\n            this.disabledDay = false;\r\n            this.applyClockInfo = JSON.parse(\r\n                window.localStorage.getItem(\"applyClockInfo\")\r\n            );\r\n            if (this.applyClockInfo) {\r\n                this.formData.day = this.applyClockInfo.day;\r\n                if (this.applyClockInfo.type == 1) {\r\n                    this.formData.time = \"09:30\";\r\n                }\r\n                if (this.applyClockInfo.type == 2) {\r\n                    this.formData.time = \"18:30\";\r\n                }\r\n                this.formData.clockList = JSON.stringify(this.applyClockInfo);\r\n\r\n                this.queryClockNum.month = this.applyClockInfo.day.substring(\r\n                    0,\r\n                    7\r\n                );\r\n                this.getClockNum();\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"permissions\", \"userId\"])\r\n    },\r\n    methods: {\r\n        getClockNum() {\r\n            if (this.formData.newData) {\r\n                getClockNum(this.queryClockNum).then(response => {\r\n                    if (response.data.data) {\r\n                        this.clockNum = response.data.data.clockNum;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        selectClockDay(val) {\r\n            getClockInfo(val).then(response => {\r\n                //console.log(response.data.data)\r\n                const clockInfo = response.data.data;\r\n                if (clockInfo.type == 1) {\r\n                    this.formData.time = \"09:30\";\r\n                }\r\n                if (clockInfo.type == 2) {\r\n                    this.formData.time = \"18:30\";\r\n                }\r\n\r\n                this.formData.day = clockInfo.day;\r\n                this.formData.clockList = JSON.stringify(clockInfo);\r\n                this.queryClockNum.month = clockInfo.day.substring(0, 7);\r\n                this.getClockNum();\r\n            });\r\n        },\r\n        getAbnormalSeven() {\r\n            getAbnormalSeven(this.query.userId).then(response => {\r\n                response.data.data.forEach(element => {\r\n                    if (element.type == 1) {\r\n                        this.dayOptions.push({\r\n                            value: element.clockId,\r\n                            label: element.day + \"  上班卡\"\r\n                        });\r\n                    } else if (element.type == 2) {\r\n                        this.dayOptions.push({\r\n                            value: element.clockId,\r\n                            label: element.day + \"  下班卡\"\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        getApplyUser() {\r\n            getApplyUserInfo(this.query).then(response => {\r\n                const applyUser = response.data.data;\r\n                this.applyUserList.push({\r\n                    userId: applyUser.userId,\r\n                    username: applyUser.username,\r\n                    avatar: applyUser.avatar\r\n                });\r\n                this.formData.approverids = applyUser.userId;\r\n            });\r\n        },\r\n        backHistory() {\r\n            window.localStorage.removeItem(\"editClockInfo\");\r\n            window.localStorage.removeItem(\"applyClockInfo\");\r\n            this.formData.newData = true;\r\n            this.formData.clockId = null;\r\n            this.formData.day = \"\";\r\n            this.formData.time = \"\";\r\n            this.formData.reason = \"\";\r\n            this.clockNum = 0;\r\n            this.$router.go(-1);\r\n        },\r\n        onSubmit() {\r\n            this.$refs[\"formData\"].validate(valid => {\r\n                if (valid) {\r\n                    this.saving = true;\r\n                    if (!this.formData.newData) {\r\n                        editObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.backHistory();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    } else {\r\n                        addObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.backHistory();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        getStandardApplyInfo() {\r\n            getStandardApplyInfoById(5).then(response => {\n                console.log(response)\r\n                if (response.data.data) {\r\n                    const data = response.data.data;\r\n                    this.content = data.content;\r\n                    const clockStandardApply = JSON.parse(\r\n                        window.localStorage.getItem(\"clockStandardApply\")\r\n                    );\r\n                    if (clockStandardApply) {\r\n                        if (clockStandardApply.version < data.version) {\r\n                            this.open();\r\n                        }\r\n                    } else {\r\n                        this.open();\r\n                    }\r\n                    window.localStorage.setItem(\r\n                        \"clockStandardApply\",\r\n                        JSON.stringify(data)\r\n                    );\r\n                }\r\n            });\r\n        },\r\n        open() {\r\n            let content = this.content.split(\"\\n\\n\");\r\n            let newDatas = [];\r\n            const h = this.$createElement;\r\n            for (let i in content) {\r\n                newDatas.push(h(\"p\", null, content[i]));\r\n            }\r\n            this.$alert(h(\"div\", null, newDatas), \"未打卡规范\");\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n",null]}