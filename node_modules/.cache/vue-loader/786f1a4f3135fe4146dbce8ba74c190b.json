{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\other\\Act.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\other\\Act.vue","mtime":1594003824563},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getModelPage, insertModel, deployModel, delModel } from \"../../api/other/act.js\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                current: 1,\r\n                size: 10\r\n            },\r\n            listType: '1',\r\n            pages: 0,\r\n            total: 0,\r\n            dialogTitle: \"\",\r\n            listLoading: false,\r\n            dialogVisible: false,\r\n            saving: false,\r\n            list: [],\r\n            formData: {\r\n                newData: true,\r\n                name: \"\",\r\n                key: \"\",\r\n                category: \"\",\r\n                desc: \"\"\r\n            },\r\n            rules: {\r\n                key: [{ required: true, message: \"请输入模型标识\" }],\r\n                category: [{ required: true, message: \"请输入流程分类\" }],\r\n                name: [{ required: true, message: \"请输入模型名称\" }],\r\n                desc: [{ required: true, message: \"请输入描述\" }]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getModelPage();\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"permissions\"])\r\n    },\r\n    methods: {\r\n        getModelPage() {\r\n            this.loading = true;\r\n            getModelPage(this.query)\r\n                .then(response => {\r\n                    this.loading = false;\r\n                    //console.log(response.data.data)\r\n                    this.total = response.data.data.total;\r\n                    this.query.current = response.data.data.current;\r\n                    this.query.size = response.data.data.size;\r\n                    this.list = response.data.data.records;\r\n                })\r\n                .catch(() => {\r\n                    this.loading = false;\r\n                });\r\n        },\r\n        handleSizeChange(val) {\r\n            this.query.size = val;\r\n            this.getModelPage();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.query.current = val;\r\n            this.getModelPage();\r\n        },\r\n        handleModal(data) {\r\n            if (data) {\r\n                this.dialogTitle = \"编辑模型 - \" + data.name;\r\n                this.formData.newData = false;\r\n                this.formData.key = data.key;\r\n                this.formData.category = data.category;\r\n                this.formData.name = data.name;\r\n                this.formData.desc = data.desc;\r\n            } else {\r\n                this.dialogTitle = \"添加模型\";\r\n                this.formData.newData = true;\r\n                this.formData.key = \"\";\r\n                this.formData.category = \"\";\r\n                this.formData.name = \"\";\r\n                this.formData.desc = \"\";\r\n            }\r\n            this.dialogVisible = true;\r\n        },\r\n        handleSubmit() {\r\n            this.$refs[\"formData\"].validate(valid => {\r\n                if (valid) {\r\n                    this.saving = true;\r\n                    if (!this.formData.newData) {\r\n                        console.log(this.formData);\r\n                        // putObj(this.formData)\r\n                        //     .then(res => {\r\n                        //         if (res.data.data) {\r\n                        //             this.dialogVisible = false;\r\n                        //             this.getJobList();\r\n                        //         }\r\n                        //     })\r\n                        //     .finally(() => {\r\n                        //         this.saving = false;\r\n                        //     });\r\n                    } else {\r\n                        insertModel(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.dialogVisible = false;\r\n                                    this.getModelPage();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        handleModalDesign(data) {\r\n            console.log(data)\r\n            this.$router.push({\r\n                path: \"/other/act_design/\" + data.id\r\n            });\r\n        },\r\n        handleModalDeploy(row){\r\n            if (row.id) {\r\n                this.$confirm(\"确认部署 \" + row.name + \" 吗?\", \"提示\", {\r\n                    type: \"warning\"\r\n                }).then(() => {\r\n                    deployModel(row.id).then(res => {\r\n                        console.log(res)\r\n                        this.getModelPage();\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        // 删除\r\n        handleDel(index, row) {\r\n            if (row.id) {\r\n                this.$confirm(\"确认删除 \" + row.name + \" 吗?\", \"提示\", {\r\n                    type: \"warning\"\r\n                }).then(() => {\r\n                    delModel(row.id).then(res => {\r\n                        console.log(res)\r\n                        this.getModelPage();\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        openList(val) {\r\n            if (val == 2) {\r\n                this.$router.push({\r\n                    path: '/other/process'\r\n                });\r\n            }\r\n        },\r\n    },\r\n    mounted() {}\r\n};\r\n",null]}