{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\apply\\invoice\\Approver.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\apply\\invoice\\Approver.vue","mtime":1595498361789},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// 表格导出\r\nimport FileSaver from 'file-saver';\r\nimport XLSX from 'xlsx';\r\nimport { getInvoiceApproverPage, getInvoices } from '../../../api/apply/invoice.js';\r\nimport { getUserList } from '../../../api/admin/user.js';\r\n// import {getUserInfo} from \"../../../api/admin/user.js\";\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                userId: null,\r\n                likeKeyWords: '',\r\n                applyUserId: null,\r\n                status: '',\r\n                orderBy: 'create_time_desc',\r\n                current: 1,\r\n                size: 10\r\n            },\r\n            userOptions: [],\r\n            statusOptions: [\r\n                {\r\n                    value: '',\r\n                    label: '全部'\r\n                },\r\n                {\r\n                    value: '0',\r\n                    label: '审批中'\r\n                },\r\n                {\r\n                    value: '1',\r\n                    label: '同意'\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: '拒绝'\r\n                }\r\n            ],\r\n            classifyOptions: [\r\n                {\r\n                    value: '',\r\n                    label: '全部'\r\n                }\r\n            ],\r\n\r\n            pages: 0,\r\n            total: 0,\r\n            listLoading: false,\r\n            list: [],\r\n            number: '',\r\n            listType: '2'\r\n        };\r\n    },\r\n    created() {\r\n        window.localStorage.removeItem('editInvoiceInfo');\r\n        let page = sessionStorage.getItem('page2');\r\n        if (page != null) {\r\n            this.query.current = Number(page);\r\n        }\r\n        this.query.status = this.$route.query.status;\r\n        if (!this.query.status) {\r\n            this.query.status = '';\r\n        }\r\n        this.query.userId = this.userId;\r\n        this.getUserList();\r\n        this.getInvoiceApproverPage();\r\n        this.getInvoices('100000');\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions', 'userId'])\r\n    },\r\n    methods: {\r\n        getInvoices(id) {\r\n            getInvoices(id, this.userId).then(res => {\r\n                res.data.data.invoiceType.forEach(item => {\r\n                    this.classifyOptions.push({\r\n                        value: item.id,\r\n                        label: item.name\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        sortChange(a, b) {\r\n            //排序\r\n            return a.invoicePriceYuan - b.invoicePriceYuan;\r\n        },\r\n        sortChange1(a, b) {\r\n            //排序\r\n            return a.payPriceYuan - b.payPriceYuan;\r\n        },\r\n        getUserList() {\r\n            getUserList().then(response => {\r\n                response.data.data.forEach(element => {\r\n                    //console.log(element)\r\n                    this.userOptions.push({\r\n                        value: element.userId,\r\n                        label: element.username\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        getInvoiceApproverPage() {\r\n            this.listLoading = true;\r\n            getInvoiceApproverPage(this.query)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    this.listLoading = false;\r\n                    this.total = response.data.data.total;\r\n                    this.query.current = response.data.data.current;\r\n                    this.query.size = response.data.data.size;\r\n                    this.list = response.data.data.records;\r\n                })\r\n                .catch(() => {\r\n                    this.listLoading = false;\r\n                });\r\n        },\r\n        handleSizeChange(val) {\r\n            this.query.size = val;\r\n            this.getInvoiceApproverPage();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.query.current = val;\r\n            sessionStorage.setItem('page2', val);\r\n            this.getInvoiceApproverPage();\r\n        },\r\n        handInfo(data) {\r\n            console.log(data);\r\n            this.$router.push({\r\n                path: '/apply/invoice/info/' + data.invoiceId\r\n            });\r\n        },\r\n        openList(val) {\r\n            if (val == 1) {\r\n                this.$router.push({\r\n                    path: '/apply/invoice'\r\n                });\r\n            }\r\n        },\r\n        exportExcel() {\r\n            let fix = document.querySelector('.el-table__fixed-right');\r\n            let wb;\r\n            if (fix) {\r\n                //判断要导出的节点中是否有fixed的表格，如果有，转换excel时先将该dom移除，然后append回去\r\n                wb = XLSX.utils.table_to_book(document.querySelector('#out-table').removeChild(fix));\r\n                document.querySelector('#out-table').appendChild(fix);\r\n            } else {\r\n                wb = XLSX.utils.table_to_book(document.querySelector('#out-table'));\r\n            }\r\n            let wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' });\r\n            try {\r\n                FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), '我的报销审批列表.xlsx');\r\n            } catch (e) {\r\n                if (typeof console !== 'undefined') console.log(e, wbout);\r\n            }\r\n            return wbout;\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n",null]}