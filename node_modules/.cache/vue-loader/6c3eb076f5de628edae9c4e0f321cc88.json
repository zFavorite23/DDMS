{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\apply\\receipt\\Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\apply\\receipt\\Form.vue","mtime":1592276949966},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { addObj, editObj } from '../../../api/apply/receipt.js';\nimport { getApplyUserInfo } from '../../../api/admin/user.js';\nimport { getItemVosWithUserId } from '../../../api/project/team.js';\nimport { getFirstpartyAll } from '../../../api/customer/firstparty.js';\nimport { getStandardApplyInfoById } from '../../../api/standard/apply.js';\nimport { mapGetters } from 'vuex';\nexport default {\n    data() {\n        return {\n            query: {\n                itemId: null,\n                userId: null,\n                deptId: null,\n                type: 8\n            },\n            formData: {\n                newData: true,\n                receiptId: null,\n                itemId: null,\n                companyId: null,\n                userId: null,\n                type: '2',\n                firstPartyId: null,\n                name: '',\n                dutyParagraph: '',\n                address: '',\n                telephone: '',\n                bankName: '',\n                bankAccount: '',\n                proportion: '',\n                priceYuan: '',\n                content: '11',\n                remark: '',\n                detailedList: '',\n                isAffirm: '1'\n            },\n            uploadUrl: '',\n            rules: {\n                itemId: [\n                    {\n                        required: true,\n                        message: '请选择开票项目',\n                        trigger: 'change'\n                    }\n                ],\n                companyId: [\n                    {\n                        required: true,\n                        message: '请选择开票公司',\n                        trigger: 'change'\n                    }\n                ],\n                type: [\n                    {\n                        required: true,\n                        message: '请选择开票类型',\n                        trigger: 'change'\n                    }\n                ],\n                name: [{ required: true, message: '请填写公司名称' }],\n                dutyParagraph: [{ required: true, message: '请填写公司税号' }],\n                address: [{ required: true, message: '请填写公司注册地址' }],\n                telephone: [{ required: true, message: '请填写公司电话' }],\n                bankName: [{ required: true, message: '请填写开户行名称' }],\n                bankAccount: [{ required: true, message: '请填写开户行账号' }],\n                proportion: [{ required: true, message: '请填写开票百分比' }],\n                priceYuan: [{ required: true, message: '请填写开票金额' }],\n                content: [\n                    {\n                        required: true,\n                        message: '请选择开票内容',\n                        trigger: 'blur'\n                    }\n                ],\n                remark: [\n                    {\n                        required: true,\n                        message: '请选择发票备注',\n                        trigger: 'blur'\n                    }\n                ],\n                detailedList: [\n                    {\n                        required: true,\n                        message: '请上传产品清单',\n                        trigger: 'blur'\n                    }\n                ],\n                isAffirm: [\n                    {\n                        required: true,\n                        message: '请选择是否与对方确认',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            type1Visible: false,\n            itemOptions: [],\n            companyOptions: [\n                {\n                    label: '北京甲板智慧科技有限公司',\n                    value: 1\n                },\n                {\n                    label: '北京甲板数字科技有限公司',\n                    value: 2\n                }\n            ],\n            firstPartyList: [],\n            firstPartyOptions: [],\n            saving: false,\n            applyUserList: []\n        };\n    },\n    created() {\n        this.getStandardApplyInfo();\n        this.getApplyUser(this.userId);\n        this.getItemVosWithUserId(this.userId);\n        this.getFirstpartyAll();\n\n        this.formData.userId = this.userId;\n        this.query.userId = this.userId;\n\n        this.uploadUrl = `${window.location.origin}/apply/receipt/upload`;\n\n        const editReceiptInfo = JSON.parse(window.localStorage.getItem('editReceiptInfo'));\n        if (editReceiptInfo) {\n            console.log(editReceiptInfo);\n            this.formData.newData = false;\n            this.formData.receiptId = editReceiptInfo.receiptId;\n            this.formData.itemId = editReceiptInfo.itemId;\n            if (this.formData.itemId) {\n                this.selectItem(this.formData.itemId);\n            }\n            this.formData.companyId = editReceiptInfo.companyId;\n            this.formData.type = editReceiptInfo.type;\n            this.formData.firstPartyId = editReceiptInfo.firstPartyId;\n            this.formData.name = editReceiptInfo.name;\n            this.formData.dutyParagraph = editReceiptInfo.dutyParagraph;\n            this.formData.address = editReceiptInfo.address;\n            this.formData.telephone = editReceiptInfo.telephone;\n            this.formData.bankName = editReceiptInfo.bankName;\n            this.formData.bankAccount = editReceiptInfo.bankAccount;\n            this.formData.proportion = editReceiptInfo.proportion;\n            this.formData.priceYuan = editReceiptInfo.priceYuan;\n            this.formData.content = editReceiptInfo.content;\n            this.formData.remark = editReceiptInfo.remark;\n            //this.formData.detailedList = editReceiptInfo.detailedList;\n            this.formData.isAffirm = editReceiptInfo.isAffirm;\n        }\n    },\n    computed: {\n        ...mapGetters(['permissions', 'userId'])\n    },\n    methods: {\n        selectItem(val) {\n            if (val == null || val == '') {\n                this.query.itemId = null;\n                this.formData.itemId = null;\n                this.getApplyUser();\n            } else {\n                this.query.itemId = val;\n                this.formData.itemId = val;\n                this.getApplyUser();\n            }\n        },\n        getApplyUser() {\n            getApplyUserInfo(this.query).then(response => {\n                this.applyUserList = [];\n                this.formData.approverids = null;\n                response.data.data.forEach(element => {\n                    if(element!=null){\n                        this.applyUserList.push({\n                            userId: element.userId,\n                            username: element.username,\n                            avatar: element.avatar\n                        });\n                        if (this.formData.approverids == null) {\n                            this.formData.approverids += element.userId;\n                        } else {\n                            this.formData.approverids += ',' + element.userId;\n                        }\n                    }\n\n\n                });\n            });\n        },\n        getItemVosWithUserId(userId) {\n            getItemVosWithUserId(userId).then(response => {\n                console.log(response)\n                response.data.data.forEach(element => {\n                    this.itemOptions.push({\n                        value: element.itemId,\n                        label: element.alias\n                    });\n                });\n            });\n        },\n        getFirstpartyAll() {\n            getFirstpartyAll().then(response => {\n                this.firstPartyList = response.data.data;\n                response.data.data.forEach(element => {\n                    this.firstPartyOptions.push({\n                        firstPartyId: element.firstPartyId,\n                        name: element.name\n                    });\n                });\n            });\n        },\n        selectFirstParty(val) {\n            var that = this;\n            this.firstPartyList.forEach(element => {\n                if (element.firstPartyId == val) {\n                    that.formData.name = element.name;\n                    that.formData.dutyParagraph = element.dutyParagraph;\n                    that.formData.address = element.address;\n                    that.formData.telephone = element.telephone;\n                    that.formData.bankName = element.bankName;\n                    that.formData.bankAccount = element.bankAccount;\n                }\n            });\n        },\n        backHistory() {\n            window.localStorage.removeItem('editReceiptInfo');\n            this.formData.newData = true;\n            this.formData.receiptId = null;\n            this.formData.itemId = null;\n            this.formData.companyId = null;\n            this.formData.userId = null;\n            this.formData.type = '2';\n            this.formData.firstPartyId = null;\n            this.formData.name = '';\n            this.formData.dutyParagraph = '';\n            this.formData.address = '';\n            this.formData.telephone = '';\n            this.formData.bankName = '';\n            this.formData.bankAccount = '';\n            this.formData.proportion = '';\n            this.formData.priceYuan = '';\n            this.formData.content = '11';\n            this.formData.remark = '';\n            this.formData.detailedList = '';\n            this.formData.isAffirm = '1';\n\n            this.$router.go(-1);\n        },\n        onSubmit() {\n            this.$refs['formData'].validate(valid => {\n                if (valid) {\n                    this.saving = true;\n                    if (!this.formData.newData) {\n                        this.formData.status = 0;\n                        editObj(this.formData)\n                            .then(res => {\n                                if (res.data.data) {\n                                    this.backHistory();\n                                }\n                            })\n                            .finally(() => {\n                                this.saving = false;\n                            });\n                    } else {\n                        addObj(this.formData)\n                            .then(res => {\n                                if (res.data.data) {\n                                    this.backHistory();\n                                }\n                            })\n                            .finally(() => {\n                                this.saving = false;\n                            });\n                    }\n                }\n            });\n        },\n        getStandardApplyInfo() {\n            getStandardApplyInfoById(8).then(response => {\n                if (response.data.data) {\n                    const data = response.data.data;\n                    this.content = data.content;\n                    const receiptStandardApply = JSON.parse(window.localStorage.getItem('receiptStandardApply'));\n                    if (receiptStandardApply) {\n                        if (receiptStandardApply.version < data.version) {\n                            this.open();\n                        }\n                    } else {\n                        this.open();\n                    }\n                    window.localStorage.setItem('receiptStandardApply', JSON.stringify(data));\n                }\n            });\n        },\n        open() {\n            let content = this.content.split('\\n\\n');\n            let newDatas = [];\n            const h = this.$createElement;\n            for (let i in content) {\n                newDatas.push(h('p', null, content[i]));\n            }\n            this.$alert(h('div', null, newDatas), '开票规范');\n        },\n        /**\n         * 产品清单模板下载\n         */\n        templateDownload() {\n            //this.$refs.upload.submit();\n            window.location.href = 'http://192.168.1.88/receipt-temp.xlsx';\n        },\n        handleRemove(file, fileList) {\n            console.log(file, fileList);\n            this.formData.detailedList = '';\n        },\n        handlePreview(file) {\n            console.log(file);\n        },\n        handSuccess(data) {\n            const fileInfo = data.data;\n            const fileUrl = fileInfo.bucketName + '-' + fileInfo.fileName;\n            console.log(fileUrl);\n            this.formData.detailedList = fileUrl;\n        }\n    },\n    mounted() {}\n};\n",null]}