{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\home\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\home\\index.vue","mtime":1595384259550},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex';\r\nimport SidebarItem from './SidebarItem.vue';\r\nimport { password } from '../../api/auth/login';\r\nimport { getUserId } from '../../utils/auth';\r\nimport html2canvas from 'html2canvas';\r\n\r\n// import 'video.js/dist/video-js.css';\r\n// import 'vue-video-player/src/custom-theme.css';\r\n// import { videoPlayer } from 'vue-video-player';\r\n// import 'videojs-flash';\r\n\r\nimport videojs from 'video.js';\r\nimport 'videojs-contrib-hls';\r\nexport default {\r\n    name: 'top-mag',\r\n\r\n    data() {\r\n        let validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (!/^[0-9A-Za-z]{6,15}$/.test(value)) {\r\n                    callback(new Error('密码少于6位'));\r\n                }\r\n                if (this.passwordFormData.check_new_password !== '') {\r\n                    this.$refs.passwordFormData.validateField('check_new_password');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        let validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.passwordFormData.new_password) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            isShow: false,\r\n            dataurl: '',\r\n            dialogVisible: false,\r\n            menuShow: false,\r\n            levelList: null,\r\n            passwordLoading: false,\r\n            passwordFormVisible: false,\r\n            passwordFormData: {\r\n                old_password: '',\r\n                new_password: '',\r\n                check_new_password: ''\r\n            },\r\n            passwordFormDataRules: {\r\n                old_password: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入原始密码',\r\n                        trigger: 'blur'\r\n                    }\r\n                ],\r\n                new_password: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入新密码',\r\n                        trigger: 'blur'\r\n                    },\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                check_new_password: [\r\n                    {\r\n                        required: true,\r\n                        message: '请再次输入密码',\r\n                        trigger: 'blur'\r\n                    },\r\n                    { validator: validatePass2, trigger: 'blur' }\r\n                ]\r\n            },\r\n            // 视频播放\r\n            videoOptions: {\r\n                playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度\r\n                autoplay: false, //如果true,浏览器准备好时开始回放。\r\n                muted: false, // 默认情况下将会消除任何音频。\r\n                loop: false, // 导致视频一结束就重新开始。\r\n                preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n                language: 'zh-CN',\r\n                aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n                techOrder: ['flash', 'html5'], // 兼容顺序\r\n                sources: [\r\n                    {\r\n                        // 流配置，数组形式，会根据兼容顺序自动切换\r\n                        type: 'rtmp/hls',\r\n                        src: 'rtmp://211.154.252.186:10935/hls/stream_1'\r\n                    }\r\n                ],\r\n                poster: '', //你的封面地址\r\n                // width: document.documentElement.clientWidth,\r\n                notSupportedMessage: '此视频暂无法播放，请稍后再试', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n                controlBar: {\r\n                    timeDivider: true,\r\n                    durationDisplay: true,\r\n                    remainingTimeDisplay: false,\r\n                    fullscreenToggle: true //全屏按钮\r\n                },\r\n                autoplay: true\r\n            }\r\n        };\r\n    },\r\n    components: {\r\n        SidebarItem\r\n        // videoPlayer\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            routers: 'routers'\r\n        }),\r\n        onRoutes() {\r\n            return this.$route.path;\r\n        },\r\n        username() {\r\n            let username = this.$store.state.admin.userName;\r\n            return !username ? this.name : username;\r\n        },\r\n        avatar() {\r\n            let avatar = this.$store.state.admin.avatar;\r\n            return !avatar ? this.name : avatar;\r\n        },\r\n        isCollapse() {\r\n            return this.$store.state.app.sidebar.opened;\r\n        }\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        off(){\r\n            this.$axios({\r\n                method:'get',\r\n                url:'http://www.dreamdeck.cn:18000/computer/getAllComputer'\r\n            }).then(res=>{\r\n                console.log(res)\r\n            })\r\n        },\r\n        See(e) {\r\n            window.open('https://www.baidu.com', '_blank');\r\n        },\r\n        open() {\r\n            videojs(\r\n                'my-video',\r\n                {\r\n                    bigPlayButton: false,\r\n                    textTrackDisplay: false,\r\n                    posterImage: true,\r\n                    errorDisplay: false,\r\n                    controlBar: true\r\n                },\r\n                function() {\r\n                    this.play();\r\n                }\r\n            );\r\n        },\r\n\r\n        toggleSideBar() {\r\n            this.$store.dispatch('ToggleSideBar');\r\n        },\r\n        showSideBar() {\r\n            this.$store.dispatch('ShowSideBar');\r\n        },\r\n        getBreadcrumb() {\r\n            let matched = this.$route.matched.filter(item => item.name);\r\n            const first = matched[0];\r\n            if (first && (first.name !== '首页' || first.path !== '')) {\r\n                matched = [{ name: '首页', path: '/' }].concat(matched);\r\n            }\r\n            this.levelList = matched;\r\n            console.log(this.levelList);\r\n        },\r\n        loginOut() {\r\n            console.log('2');\r\n            this.$confirm('此操作将退出系统, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$store.dispatch('loginOut').then(() => {\r\n                        //this.setCookie(\"ddmsAutoLogin\",\"\")\r\n                        window.localStorage.setItem('ddmsAutoLogin', '');\r\n                        location.reload(); // 为了重新实例化vue-router对象 避免bug\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '操作失败'\r\n                    });\r\n                });\r\n        },\r\n        // 保存cookie\r\n        setCookie: function(cName, value, expiredays) {\r\n            var exdate = new Date();\r\n            exdate.setDate(exdate.getDate() + expiredays);\r\n            document.cookie = cName + '=' + decodeURIComponent(value) + (expiredays == null ? '' : ';expires=' + exdate.toGMTString());\r\n        },\r\n        handleUserInfo() {\r\n            this.$router.push({\r\n                path: '/admin/user/info'\r\n            });\r\n        },\r\n        // 显示修改密码界面\r\n        handlePassword() {\r\n            this.passwordFormVisible = true;\r\n            this.passwordFormData = {\r\n                old_password: '',\r\n                new_password: '',\r\n                check_new_password: ''\r\n            };\r\n        },\r\n        addSubmit(formName) {\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    //this.passwordLoading = true;\r\n                    let data = Object.assign({});\r\n                    data.userId = getUserId();\r\n                    data.password = this.passwordFormData.old_password;\r\n                    data.newpassword1 = this.passwordFormData.new_password;\r\n                    console.log(data);\r\n                    password(data)\r\n                        .then(res => {\r\n                            //this.passwordLoading = false;\r\n                            console.log(res.data.data);\r\n                            if (res.data.data) {\r\n                                this.$message({\r\n                                    message: '修改成功',\r\n                                    type: 'success'\r\n                                });\r\n                                // 刷新表单\r\n                                this.$refs['passwordFormData'].resetFields();\r\n                                this.passwordFormVisible = false;\r\n                                this.$store.dispatch('loginOut').then(() => {\r\n                                    location.reload(); // 为了重新实例化vue-router对象 避免bug\r\n                                });\r\n                            } else {\r\n                                this.$message({\r\n                                    message: res.data.msg,\r\n                                    type: 'error'\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(() => {\r\n                            this.$message({\r\n                                type: 'error',\r\n                                message: '操作失败'\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        },\r\n        setImage() {\r\n            let that = this;\r\n            //   event.preventDefault();\r\n            var canvas2 = document.createElement('canvas');\r\n            // let _canvas = document.getElementById('child');\r\n            let _canvas = document.getElementById('app');\r\n\r\n            var w = parseInt(window.getComputedStyle(_canvas).width);\r\n            var h = parseInt(window.getComputedStyle(_canvas).height);\r\n            //将canvas画布放大若干倍，然后盛放在较小的容器内，就显得不模糊了\r\n            canvas2.width = w * 2;\r\n            canvas2.height = h * 2;\r\n            canvas2.style.width = w + 'px';\r\n            canvas2.style.height = h + 'px';\r\n            //可以按照自己的需求，对context的参数修改,translate指的是偏移量\r\n            //  var context = canvas.getContext(\"2d\");\r\n            //  context.translate(0,0);\r\n            var context = canvas2.getContext('2d');\r\n            context.scale(2, 2);\r\n            // html2canvas(document.getElementById('child'), {\r\n            html2canvas(document.getElementById('app'), {\r\n                canvas: canvas2\r\n            }).then(function(canvas) {\r\n                var blob = that.getBlob(canvas);\r\n                var oMyForm = new FormData();\r\n                var fileName = 'mobile' + '.jpg';\r\n                oMyForm.append('file', blob, fileName);\r\n                //\t\t\t\toMyForm.append(\"fileName\", fileName);\r\n                oMyForm.append('fileType', 'image');\r\n                oMyForm.append('user_id', that);\r\n            });\r\n            this.dialogVisible = true;\r\n        },\r\n        getBlob(canvas) {\r\n            //获取blob对象\r\n            var data = canvas.toDataURL('image/jpeg', 1);\r\n            this.dataurl = data;\r\n            //console.log(this.dataurl)\r\n            data = data.split(',')[1];\r\n            data = window.atob(data);\r\n            var ia = new Uint8Array(data.length);\r\n            for (var i = 0; i < data.length; i++) {\r\n                ia[i] = data.charCodeAt(i);\r\n            }\r\n            return new Blob([ia], {\r\n                type: 'image/jpeg'\r\n            });\r\n        }\r\n    },\r\n    created() {\r\n        this.getBreadcrumb();\r\n    },\r\n    watch: {\r\n        $route() {\r\n            this.getBreadcrumb();\r\n        }\r\n    }\r\n};\r\n",null]}