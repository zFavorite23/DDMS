{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\other\\Quartz.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\other\\Quartz.vue","mtime":1588235430071},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n    fetchList,\r\n    addObj,\r\n    putObj,\r\n    delObj,\r\n    runJobRa,\r\n    shutdownJobsRa,\r\n    startJobRa,\r\n    shutDownJobRa\r\n} from \"../../api/other/quartz.js\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                jobType: \"\",\r\n                current: 1,\r\n                size: 10\r\n            },\r\n            pages: 0,\r\n            total: 0,\r\n            dialogTitle: \"\",\r\n            listLoading: false,\r\n            dialogVisible: false,\r\n            saving: false,\r\n            list: [],\r\n            job_btn_add: false,\r\n            job_btn_edit: false,\r\n            job_btn_del: false,\r\n            job_btn_shutdown: false,\r\n            job_btn_start: false,\r\n            job_btn_refresh: false,\r\n            job_btn_run: false,\r\n            jobTypeOptions: [\r\n                {\r\n                    value: \"1\",\r\n                    label: \"java类\"\r\n                },\r\n                {\r\n                    value: \"2\",\r\n                    label: \"spring bean名称\"\r\n                },\r\n                {\r\n                    value: \"3\",\r\n                    label: \"rest调用\"\r\n                },\r\n                {\r\n                    value: \"4\",\r\n                    label: \"jar调用\"\r\n                },\r\n                {\r\n                    value: \"9\",\r\n                    label: \"其他\"\r\n                }\r\n            ],\r\n            misfirePolicyOptions: [\r\n                {\r\n                    value: \"1\",\r\n                    label: \"错失周期立即执行\"\r\n                },\r\n                {\r\n                    value: \"2\",\r\n                    label: \"错失周期执行一次\"\r\n                },\r\n                {\r\n                    value: \"3\",\r\n                    label: \"下周期执行\"\r\n                }\r\n            ],\r\n            formData: {\r\n                newData: true,\r\n                jobId: \"\",\r\n                jobName: \"\",\r\n                jobGroup: \"\",\r\n                jobType: \"\",\r\n                executePath: \"\",\r\n                className: \"\",\r\n                methodName: \"\",\r\n                methodParamsValue: \"\",\r\n                cronExpression: \"\",\r\n                misfirePolicy: \"\",\r\n                remark: \"\"\r\n            },\r\n            rules: {\r\n                jobName: [{ required: true, message: \"请输入任务名称\" }],\r\n                jobGroup: [{ required: true, message: \"请输入任务组名\" }],\r\n                jobType: [\r\n                    { required: true, message: \"请选择类型\", trigger: \"change\" }\r\n                ],\r\n                cronExpression: [\r\n                    { required: true, message: \"请输入cron表达式\" }\r\n                ],\r\n                misfirePolicy: [\r\n                    {\r\n                        required: true,\r\n                        message: \"请选择错失执行策略\",\r\n                        trigger: \"change\"\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getJobList();\r\n        this.job_btn_add = this.permissions[\"job_sys_job_add\"];\r\n        this.job_btn_edit = this.permissions[\"job_sys_job_edit\"];\r\n        this.job_btn_del = this.permissions[\"job_sys_job_del\"];\r\n        this.job_btn_shutdown = this.permissions[\"job_sys_job_shutdown_job\"];\r\n        this.job_btn_start = this.permissions[\"job_sys_job_start_job\"];\r\n        this.job_btn_refresh = this.permissions[\"job_sys_job_refresh_job\"];\r\n        this.job_btn_run = this.permissions[\"job_sys_job_run_job\"];\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"permissions\"])\r\n    },\r\n    methods: {\r\n        getJobList() {\r\n            this.loading = true;\r\n            fetchList(this.query)\r\n                .then(response => {\r\n                    this.loading = false;\r\n                    //console.log(response.data.data)\r\n                    this.total = response.data.data.total;\r\n                    this.query.current = response.data.data.current;\r\n                    this.query.size = response.data.data.size;\r\n                    this.list = response.data.data.records;\r\n                })\r\n                .catch(() => {\r\n                    this.loading = false;\r\n                });\r\n        },\r\n        handleModal(data) {\r\n            if (data) {\r\n                this.dialogTitle = \"编辑任务 - \" + data.jobName;\r\n                this.formData.newData = false;\r\n                this.formData.jobId = data.jobId;\r\n                this.formData.jobName = data.jobName;\r\n                this.formData.jobGroup = data.jobGroup;\r\n                this.formData.jobType = data.jobType;\r\n                this.formData.executePath = data.executePath;\r\n                this.formData.className = data.className;\r\n                this.formData.methodName = data.methodName;\r\n                this.formData.methodParamsValue = data.methodParamsValue;\r\n                this.formData.cronExpression = data.cronExpression;\r\n                this.formData.misfirePolicy = data.misfirePolicy;\r\n                this.formData.remark = data.remark;\r\n            } else {\r\n                this.dialogTitle = \"添加任务\";\r\n                this.formData.newData = true;\r\n                this.formData.jobId = \"\";\r\n                this.formData.jobName = \"\";\r\n                this.formData.jobGroup = \"\";\r\n                this.formData.jobType = \"\";\r\n                this.formData.executePath = \"\";\r\n                this.formData.className = \"\";\r\n                this.formData.methodName = \"\";\r\n                this.formData.methodParamsValue = \"\";\r\n                this.formData.cronExpression = \"\";\r\n                this.formData.misfirePolicy = \"\";\r\n                this.formData.remark = \"\";\r\n            }\r\n            this.dialogVisible = true;\r\n        },\r\n        handleModalRun(row) {\r\n            runJobRa(row.jobId)\r\n                .then(res => {\r\n                    //this.getJobList();\r\n                })\r\n                .finally(() => {\r\n                    this.saving = false;\r\n                });\r\n        },\r\n        handleModalStart(row) {\r\n            startJobRa(row.jobId)\r\n                .then(res => {\r\n                    this.getJobList();\r\n                })\r\n                .finally(() => {\r\n                    this.saving = false;\r\n                });\r\n        },\r\n        handleModalDown(row) {\r\n            shutDownJobRa(row.jobId)\r\n                .then(res => {\r\n                    this.getJobList();\r\n                })\r\n                .finally(() => {\r\n                    this.saving = false;\r\n                });\r\n        },\r\n        handleModalShutDown() {\r\n            shutdownJobsRa()\r\n                .then(res => {\r\n                    this.getJobList();\r\n                })\r\n                .finally(() => {\r\n                    this.saving = false;\r\n                });\r\n        },\r\n        handleSizeChange(val) {\r\n            this.query.size = val;\r\n            this.getJobList();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.query.current = val;\r\n            this.getJobList();\r\n        },\r\n        handleSubmit() {\r\n            this.$refs[\"formData\"].validate(valid => {\r\n                if (valid) {\r\n                    this.saving = true;\r\n                    if (!this.formData.newData) {\r\n                        console.log(this.formData);\r\n                        putObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.dialogVisible = false;\r\n                                    this.getJobList();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    } else {\r\n                        addObj(this.formData)\r\n                            .then(res => {\r\n                                if (res.data.data) {\r\n                                    this.dialogVisible = false;\r\n                                    this.getJobList();\r\n                                }\r\n                            })\r\n                            .finally(() => {\r\n                                this.saving = false;\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        // 删除\r\n        handleDel(index, row) {\r\n            if (row.jobId) {\r\n                this.$confirm(\"确认删除 \" + row.jobName + \" 吗?\", \"提示\", {\r\n                    type: \"warning\"\r\n                }).then(() => {\r\n                    delObj(row.jobId).then(res => {\r\n                        this.getJobList();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n",null]}