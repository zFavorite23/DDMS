{"remainingRequest":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DDMS\\src\\views\\checkwork\\hour\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DDMS\\src\\views\\checkwork\\hour\\List.vue","mtime":1591868656335},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DDMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getPageList, loadClockDay } from '../../../api/checkwork/hour.js';\r\nimport { getUserList } from '../../../api/admin/user.js';\r\nimport { dateFormat } from '../../../utils/date.js';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                selectMonth: dateFormat(new Date()).substr(0, 7),\r\n                userId: '',\r\n                current: 1,\r\n                size: 10\r\n            },\r\n            userOptions: [],\r\n            expireTimeOption: {\r\n                disabledDate: time => {\r\n                    var date = new Date();\r\n                    var year = date.getFullYear();\r\n                    var month = date.getMonth() + 1;\r\n                    if (month >= 1 && month <= 9) {\r\n                        month = '0' + month;\r\n                    }\r\n                    var currentdate = year.toString() + month.toString();\r\n                    var timeyear = time.getFullYear();\r\n                    var timemonth = time.getMonth() + 1;\r\n                    if (timemonth >= 1 && timemonth <= 9) {\r\n                        timemonth = '0' + timemonth;\r\n                    }\r\n                    var timedate = timeyear.toString() + timemonth.toString();\r\n                    return currentdate < timedate;\r\n                }\r\n            },\r\n            pages: 0,\r\n            total: 0,\r\n            listLoading: false,\r\n            list: [],\r\n            number: '',\r\n            checkTotal: [\r\n                {\r\n                    count: '1',\r\n                    normal: '1',\r\n                    late: '1',\r\n                    early: '1',\r\n                    no: '1',\r\n                    over: '1',\r\n                    business: '1',\r\n                    leave: '1',\r\n                    out: '1'\r\n                }\r\n            ],\r\n            userStatisticsInfo: {\r\n                userName: ''\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getUserList();\r\n        this.getClockList();\r\n        this.query.userId = this.userId;\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions', 'userId'])\r\n    },\r\n    methods: {\r\n        open() {},\r\n        getClockList() {\r\n            this.listLoading = true;\r\n            getPageList(this.query)\r\n                .then(response => {\r\n                    this.listLoading = false;\r\n                    this.total = response.data.data.total;\r\n                    this.query.current = response.data.data.current;\r\n                    this.query.size = response.data.data.size;\r\n                    this.list = response.data.data.records;\r\n                    console.log(this.list);\r\n                })\r\n                .catch(() => {\r\n                    this.listLoading = false;\r\n                });\r\n        },\r\n        getUserList() {\r\n            getUserList().then(response => {\r\n                console.log(response);\r\n                response.data.data.forEach(element => {\r\n                    //console.log(element)\r\n                    this.userOptions.push({\r\n                        value: element.userId,\r\n                        label: element.username\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        handUpdate(row) {\r\n            loadClockDay(row.userId, row.day).then(response => {\r\n                this.getClockList();\r\n            });\r\n        },\r\n        formatType: function(row) {\r\n            return row.type == 1 ? '上班' : row.type == 2 ? '下班' : '未知';\r\n        },\r\n        // 单独处理时间的函数\r\n        dealDisabledDate(time) {\r\n            return time.getTime() >= Date.now();\r\n        },\r\n        handleSizeChange(val) {\r\n            this.query.size = val;\r\n            this.getClockList();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.query.current = val;\r\n            this.getClockList();\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views/checkwork/hour","sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <el-form :inline=\"true\" :model=\"query\">\r\n                <el-form-item>\r\n                    <el-select v-model=\"query.userId\" filterable placeholder=\"请选择\">\r\n                        <el-option v-for=\"item in userOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" :disabled=\"item.disabled\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-date-picker\r\n                        v-model=\"query.selectMonth\"\r\n                        :picker-options=\"expireTimeOption\"\r\n                        type=\"month\"\r\n                        value-format=\"yyyy-MM\"\r\n                        format=\"yyyy 年 MM 月\"\r\n                        placeholder=\"选择月\"\r\n                    ></el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item><el-button type=\"primary\" size=\"medium\" v-on:click=\"getClockList()\" icon=\"el-icon-search\">搜索</el-button></el-form-item>\r\n            </el-form>\r\n        </div>\r\n\r\n        <el-row>\r\n            <el-table :data=\"list\" stripe border v-loading=\"listLoading\" style=\"width: 100%;\">\r\n                <el-table-column prop=\"userName\" min-width=\"100\" label=\"姓名\"></el-table-column>\r\n                <el-table-column prop=\"day\" min-width=\"100\" label=\"日期\"></el-table-column>\r\n                <el-table-column min-width=\"80\" label=\"考勤工时\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span>{{ scope.row.hour }} 小时</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column min-width=\"80\" label=\"填报工时\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span>{{ scope.row.useHour }} 小时</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"integral\" label=\"评分\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span v-if=\"scope.row.integral!=null\">{{ scope.row.integral }} 分</span>\r\n                        <span v-else></span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"upTime\" min-width=\"80\" label=\"上班时间\"></el-table-column>\r\n                <el-table-column prop=\"downTime\" min-width=\"80\" label=\"下班时间\"></el-table-column>\r\n                <el-table-column label=\"操作\" min-width=\"80\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button size=\"mini\" type=\"primary\" @click.native=\"handUpdate(scope.row)\">更新</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination\r\n                class=\"right\"\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"query.current\"\r\n                :page-sizes=\"[10, 20, 50, 100]\"\r\n                :page-size=\"query.size\"\r\n                layout=\"total, sizes, prev, pager, next\"\r\n                :total=\"total\"\r\n            ></el-pagination>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { getPageList, loadClockDay } from '../../../api/checkwork/hour.js';\r\nimport { getUserList } from '../../../api/admin/user.js';\r\nimport { dateFormat } from '../../../utils/date.js';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                selectMonth: dateFormat(new Date()).substr(0, 7),\r\n                userId: '',\r\n                current: 1,\r\n                size: 10\r\n            },\r\n            userOptions: [],\r\n            expireTimeOption: {\r\n                disabledDate: time => {\r\n                    var date = new Date();\r\n                    var year = date.getFullYear();\r\n                    var month = date.getMonth() + 1;\r\n                    if (month >= 1 && month <= 9) {\r\n                        month = '0' + month;\r\n                    }\r\n                    var currentdate = year.toString() + month.toString();\r\n                    var timeyear = time.getFullYear();\r\n                    var timemonth = time.getMonth() + 1;\r\n                    if (timemonth >= 1 && timemonth <= 9) {\r\n                        timemonth = '0' + timemonth;\r\n                    }\r\n                    var timedate = timeyear.toString() + timemonth.toString();\r\n                    return currentdate < timedate;\r\n                }\r\n            },\r\n            pages: 0,\r\n            total: 0,\r\n            listLoading: false,\r\n            list: [],\r\n            number: '',\r\n            checkTotal: [\r\n                {\r\n                    count: '1',\r\n                    normal: '1',\r\n                    late: '1',\r\n                    early: '1',\r\n                    no: '1',\r\n                    over: '1',\r\n                    business: '1',\r\n                    leave: '1',\r\n                    out: '1'\r\n                }\r\n            ],\r\n            userStatisticsInfo: {\r\n                userName: ''\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getUserList();\r\n        this.getClockList();\r\n        this.query.userId = this.userId;\r\n    },\r\n    computed: {\r\n        ...mapGetters(['permissions', 'userId'])\r\n    },\r\n    methods: {\r\n        open() {},\r\n        getClockList() {\r\n            this.listLoading = true;\r\n            getPageList(this.query)\r\n                .then(response => {\r\n                    this.listLoading = false;\r\n                    this.total = response.data.data.total;\r\n                    this.query.current = response.data.data.current;\r\n                    this.query.size = response.data.data.size;\r\n                    this.list = response.data.data.records;\r\n                    console.log(this.list);\r\n                })\r\n                .catch(() => {\r\n                    this.listLoading = false;\r\n                });\r\n        },\r\n        getUserList() {\r\n            getUserList().then(response => {\r\n                console.log(response);\r\n                response.data.data.forEach(element => {\r\n                    //console.log(element)\r\n                    this.userOptions.push({\r\n                        value: element.userId,\r\n                        label: element.username\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        handUpdate(row) {\r\n            loadClockDay(row.userId, row.day).then(response => {\r\n                this.getClockList();\r\n            });\r\n        },\r\n        formatType: function(row) {\r\n            return row.type == 1 ? '上班' : row.type == 2 ? '下班' : '未知';\r\n        },\r\n        // 单独处理时间的函数\r\n        dealDisabledDate(time) {\r\n            return time.getTime() >= Date.now();\r\n        },\r\n        handleSizeChange(val) {\r\n            this.query.size = val;\r\n            this.getClockList();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.query.current = val;\r\n            this.getClockList();\r\n        }\r\n    },\r\n    mounted() {}\r\n};\r\n</script>\r\n<style type=\"text/scss\" lang=\"scss\"></style>\n"]}]}